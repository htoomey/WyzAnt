{\rtf1\ansi\ansicpg1252\uc1 \deff28\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f28\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Dutch 801;}{\f29\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Swiss 721;}{\f30\fnil\fcharset2\fprq2{\*\panose 05010101010101010101}WP MathExtendedA;}
{\f31\fmodern\fcharset0\fprq1{\*\panose 010b0409020201010101}WP BoxDrawing;}{\f32\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}WP Greek Century;}{\f33\fnil\fcharset2\fprq2{\*\panose 05010101010101010101}WP MathA;}
{\f34\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}WP TypographicSymbols;}{\f268\froman\fcharset238\fprq2 Times New Roman CE;}{\f269\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f271\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f272\froman\fcharset162\fprq2 Times New Roman Tur;}{\f273\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f274\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f275\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f284\fmodern\fcharset238\fprq1 Courier New CE;}{\f285\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f287\fmodern\fcharset161\fprq1 Courier New Greek;}{\f288\fmodern\fcharset162\fprq1 Courier New Tur;}
{\f289\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f290\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f291\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive 
\b\f29\fs40 1_Chapter;}{\*\cs16 \additive \b\f29\fs26 3_Sub-Sectio;}{\*\cs17 \additive \f29\fs22 7_Body_Text2;}{\*\cs18 \additive \b\f29\fs32 2_Section;}{\*\cs19 \additive \b\f29\fs18 6_Footer;}{\*\cs20 \additive \f2 4_Code;}{\*\cs21 \additive T;}{\*
\cs22 \additive A;}{\s23\ql \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext23 footer;}{\*\cs24 \additive \sbasedon10 page number;}{\s25\qc \li0\ri0\widctlpar
\tx-720\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\tx10368\tx11520\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext25 Title;}}{\*\revtbl {Unknown;}}{\info{\author Employee}{\operator Employee}
{\creatim\yr2002\mo8\dy23\hr11\min55}{\revtim\yr2002\mo8\dy23\hr11\min56}{\version2}{\edmins1}{\nofpages48}{\nofwords12208}{\nofchars69589}{\*\company Symantec}{\nofcharsws85460}{\vern8319}}\margl1080\margr1080\margt900\margb900 
\facingp\widowctrl\ftnbj\aenddoc\ftnrestart\aftnnar\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale117\viewzk2\nolnhtadjtbl \fet0
\sectd \sbknone\pgnrestart\pgnlcrm\linex0\vertalc\endnhere\titlepg\sectdefaultcl {\footerl \pard\plain \s23\qr \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\pvpg\phpg\posx5544\posy15120\absw576\faauto\rin0\lin0\itap0 
\f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cs24 PAGE  }}{\fldrslt {\cs24\lang1024\langfe1024\noproof 8}}}{\cs24 
\par }\pard \s23\ql \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\faauto\rin0\lin0\itap0 {
\par }}{\footerr \pard\plain \s23\qr \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\pvpg\phpg\posx5544\posy15120\absw576\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cs24 PAGE  }}{\fldrslt {
\cs24\lang1024\langfe1024\noproof 9}}}{\cs24 
\par }\pard \s23\ql \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\faauto\rin0\lin0\itap0 {
\par }}{\*\pnseclvl1\pndec\pnstart1 {\pntxta .}}{\*\pnseclvl2\pnlcltr\pnstart1 {\pntxta .}}{\*\pnseclvl3\pnlcrm\pnstart1 {\pntxta .}}{\*\pnseclvl4\pndec\pnstart1 {\pntxtb (}{\pntxta )}}{\*\pnseclvl5\pnlcltr\pnstart1 {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcrm\pnstart1 {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pndec\pnstart1 {\pntxta .}}{\*\pnseclvl8\pnlcltr\pnstart1 {\pntxta .}}{\*\pnseclvl9\pnlcrm\pnstart1 }\pard\plain \s25\qc \li0\ri0\widctlpar
\tx-720\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\tx10368\tx11520\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\b\f29\fs40 Numerical Analysis
\par }\pard\plain \qc \li0\ri0\widctlpar\tx631\tx900\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\b\f29\fs40 Algorithms in C
\par Version 4.2
\par }\pard \qc \li0\ri0\widctlpar\tx-720\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\tx10368\tx11520\faauto\rin0\lin0\itap0 {\cs15\b\f29\fs40 User's Manual}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx-720\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\tx10368\tx11520\faauto\rin0\lin0\itap0 {\fs22 
\par 
\par 
\par 
\par 
\par 
\par }\pard \qc \li0\ri0\widctlpar\tx720\tx900\faauto\rin0\lin0\itap0 {\cs16\b\f29\fs26 For
\par "Numerical Analysis", fourth edition
\par Richard L. Burden and J. Douglas Faires
\par }\pard \qc \li0\ri0\widctlpar\tx-720\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\tx10368\tx11520\faauto\rin0\lin0\itap0 {\cs16\b\f29\fs26 1988}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx-720\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\tx10368\tx11520\faauto\rin0\lin0\itap0 {\fs22 
\par 
\par 
\par 
\par 
\par 
\par }\pard \qc \li0\ri0\widctlpar\tx720\tx900\faauto\rin0\lin0\itap0 {\cs16\b\f29\fs26 Written by:
\par Harold A. Toomey, MSEE
\par Care-Free Software
\par }\pard \qc \li0\ri0\widctlpar\tx-720\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\tx10368\tx11520\faauto\rin0\lin0\itap0 {\cs16\b\f29\fs26 3rd Quarter 1991}{\fs22 
\par }{\fs24 \sect }\sectd \linex0\endnhere\sectdefaultcl \pard\plain \ql \li0\ri0\widctlpar\tx-720\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\tx10368\tx11520\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\fs22 
\par 
\par 
\par  
\par }{\cs17\b\f29\fs22 Technical Publications:}{\fs22 
\par Harold A. Toomey
\par 
\par }{\cs17\b\f29\fs22 Programming:}{\fs22 
\par Harold A. Toomey
\par 
\par  
\par }{\b\fs22 (C) Copyright 1988-1993, Harold A. Toomey - All rights reserved}{\fs22 
\par 
\par This document contains proprietary information of Harold A. Toomey and is protected by Federal copyright law.  
The information may not be disclosed to third parties or copied or duplicated in any form, in whole or in part, without prior written consent of Harold A. Toomey.  Limited rights exist for individual and university site licenses.  The software may be used
 or copied only in accordance with the terms of the license agreement.  Students may copy this software with the intent to join the $20.00 Club, paying for the right to use this software.  See the sample license agreements in this document.
\par 
\par The information in this document is subject to change without notice.
\par 
\par 
\par }{\cs17\b\f29\fs22 "Numerical Analysis Algorithms in C" User's Manual
\par Version 4.2
\par Document Number 9307-42C-UM2
\par 
\par Care-Free Software
\par Attn: Harold Allen Toomey
\par 464 North 750 East
\par Lindon, UT  84042
\par 1-801-785-0464}{\cs17\f29\fs22 
\par 
\par 
\par IBM is a trademark of International Business Machines Corporation.
\par Microsoft and MS-DOS are registered trademarks.
\par UNIX is a registered trademark of AT&T Bell Laboratories.
\par VAX and VMS are registered trademarks of Digital Equipment Corporation.}{\fs22 
\par }{\fs24 \sect }\sectd \linex0\vertalc\endnhere\sectdefaultcl {\*\pnseclvl1\pndec\pnstart1\pnindent2304 {\pntxta .}}{\*\pnseclvl2\pnlcltr\pnstart1\pnindent2304 {\pntxta .}}{\*\pnseclvl3\pnlcrm\pnstart1\pnindent2304 {\pntxta .}}{\*\pnseclvl4
\pndec\pnstart1\pnindent2304 {\pntxtb (}{\pntxta )}}{\*\pnseclvl5\pnlcltr\pnstart1\pnindent2304 {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcrm\pnstart1\pnindent2304 {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pndec\pnstart1\pnindent2304 {\pntxta .}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent2304 {\pntxta .}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent2304 }\pard\plain \ql \li2304\ri2304\widctlpar\tx-720\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\tx10368\tx11520\faauto\rin2304\lin2304\itap0 
\f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs22 This collection of C programs is dedicated to my wife, Holly and to my son, David.  They gave me the priva
cy I needed to program, and they listened attentively, sharing my enthusiasm, whenever I expounded on what I had programmed\emdash even though they hadn't the foggiest idea what I was talking about.
\par }{\fs24 \sect }\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1\pndec\pnstart1 {\pntxta .}}{\*\pnseclvl2\pnlcltr\pnstart1 {\pntxta .}}{\*\pnseclvl3\pnlcrm\pnstart1 {\pntxta .}}{\*\pnseclvl4\pndec\pnstart1 {\pntxtb (}{\pntxta )}}{\*\pnseclvl5
\pnlcltr\pnstart1 {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcrm\pnstart1 {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pndec\pnstart1 {\pntxta .}}{\*\pnseclvl8\pnlcltr\pnstart1 {\pntxta .}}{\*\pnseclvl9\pnlcrm\pnstart1 }\pard\plain \ql \li0\ri0\widctlpar
\tx-720\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\tx10368\tx11520\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs22 
\par 
\par 
\par }{\cs18\b\f29\fs32 PREFACE}{\pard\plain \ql \li0\ri0\widctlpar\tx-720\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\tx10368\tx11520\faauto\rin0\lin0\itap0 \cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {
\cs18\b\f29\fs32 PREFACE}}}{\fs22 
\par 
\par 
\par }{\b\fs22 About the Author}{\fs22 
\par 
\par Harold A. Toomey, M.S. in Electrical and Computer Engineering, is currently a Software Engineer for Novell in Provo, Utah.  While minoring in mathematics at Brigham Young University, he tutored students in calculus, then tutored C programming at BYU's Ele
c
trical Engineering Department.  Not content with the provided FORTRAN algorithms while taking several numerical methods courses, he began coding numerical algorithms in C.  The introductory text used for these numerical analysis courses was "Numerical Ana
lysis."
\par 
\par 
\par }{\b\fs22 History of "Numerical Analysis Algorithms in C"}{\fs22 
\par 
\par BYU's mathematics department expressed an interest in having all of the algorithms found in the "Numerical Analysis" text programmed in C, along with a few of their favorites still in FORTRAN.  Vers
ion 3.0 was finally completed in December 1988.  BYU was the first university to purchase a university site license.  This software is being used for their numerical methods courses today and has been tested by hundreds of students.  Their input has resul
t
ed in several other versions, culminating into version 4.2.  Version 4.0 became necessary for the fourth edition of the "Numerical Analysis" text.  Since 1988, several universities and scores of students have purchased these programs to be used in college
 course work and on the job.  See the file "revhist.doc" (for revision history) for a complete overview of the history of "Numerical Analysis Algorithms in C."
\par 
\par 
\par }{\b\fs22 Acknowledgements}{\fs22 
\par 
\par The author would like to express his appreciation to the many individuals who
 made suggestions for improvement on the previous versions of these algorithms.  These include the professor who gave directions for the first version: G. S. Gill, Brigham Young University (also a reviewer for the third edition of the text), and Bruce Car
d
well who supervises the Numerical Analysis Laboratory also at Brigham Young University.  Special thanks also go to Jay Lawlor, M.S. Electrical Engineering, for giving timely feedback while using the algorithms for a numerical methods class at BYU.  In par
ticular, thanks also goes to Holly Z. Toomey for typesetting previous versions of the Examples Book.
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\fs24 \page }{\fs22 
\par 
\par 
\par }{\cs18\b\f29\fs32 CONTENTS}{\fs22 
\par 
\par }{\field{\*\fldinst {\fs24 TOC \\f}}{\fldrslt {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 PREFACE}{\cs17\f29\fs22 \tab   \_iv\_
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 1.\tab Introduction}{\cs17\f29\fs22 \tab   1\_1
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 1.1\tab Getting Started\tab   1\_1
\par 1.2\tab Purpose of the Programs\tab   1\_2
\par 1.3\tab For Instructors\tab   1\_2
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 1.3.1\tab "Numerical Analysis" Authors' Recommendations\tab   1\_2
\par 1.3.2\tab Homework Helpers\tab   1\_2
\par 1.3.3\tab Modifying Programs\tab   1\_3
\par 1.3.4\tab Intentionally Introducing Errors\tab   1\_3
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 1.4\tab Product Support\tab   1\_3
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 2.\tab Installation}{\cs17\f29\fs22 \tab   2\_1
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 2.1\tab Basic Installation Procedures\tab   2\_1
\par 2.2\tab Uploading to Mainframe Computers\tab   2\_2
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 3.\tab "Numerical Analysis Algorithms in C" Files}{\cs17\f29\fs22 \tab   3\_1
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 3.1\tab Algorithm Files\tab   3\_1
\par 3.3\tab Supporting C Source Code\tab   3\_5
\par 3.4\tab Documentation Files\tab   3\_6
\par 3.5\tab Utility Files\tab   3\_6
\par 3.6\tab Batch, Script and Command Files\tab   3\_7
\par 3.7\tab File Structure Chart\tab   3\_8
\par 3.8\tab File Name Translation Table from 3rd to 4th Edition\tab   3\_8
\par 3.9\tab 4th Edition Differences\tab   3\_9
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 4.\tab Step-By-Step Examples on Various Computers}{\cs17\f29\fs22 \tab   4\_1
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 4.1\tab Need List\tab   4\_1
\par 4.2\tab Customizing Naautil.c\tab   4\_1
\par 4.3\tab Example Using MS-DOS, Microsoft C and the P-Edit Editor\tab   4\_2
\par 4.4\tab Example Using UNIX, cc and the vi Editor\tab   4\_5
\par 4.5\tab Example Using a Macintosh and THINK\~C\tab   4\_8
\par 4.6\tab Example Using VAX/VMS, CC and the EDIT/EDT Editor\tab   4\_12
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 5.\tab For Those New to C}{\cs17\f29\fs22 \tab   5\_1
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 5.1\tab Mathematical Operators\tab   5\_1
\par 5.2\tab Mathematical Functions\tab   5\_2
\par 5.3\tab General Language Hints\tab   5\_5
\par 5.4\tab Language Transition Kit\tab   5\_6
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 6.\tab Helps and Hints}{\cs17\f29\fs22 \tab   6\_1
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 6.1\tab Generally Nice To Know\tab   6\_1
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 6.1.1\tab Professor's Favorites, Must Have, Algorithms\tab   6\_1
\par 6.1.2\tab Homework Helper Algorithms\tab   6\_1
\par 6.1.3\tab Optional Title\tab   6\_1
\par 6.1.4\tab Optional File Saving\tab   6\_2
\par 6.1.5\tab Finding Functions\tab   6\_2
\par 6.1.6\tab Using Default Inputs\tab   6\_2
\par 6.1.7\tab Changing Arithmetic Precision\tab   6\_2
\par 6.1.8\tab Using Floating-Point Numbers in Functions\tab   6\_3
\par 6.1.9\tab The Pow() Function\tab   6\_4
\par 6.1.10\tab Implementing SIG-Digit Rounding/Truncation\tab   6\_4
\par 6.1.11\tab Floating-Point Output Alignment\tab   6\_5
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 6.2\tab Converting Programs into Functions\tab   6\_5
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 6.2.1\tab An Example Using Simpson's Rule\tab   6\_7
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 6.3\tab Using Input Files (*.IN)\tab   6\_8
\par 6.4\tab Using Output Files (*.OUT)\tab   6\_10
\par 6.5\tab Explanation of the Naautil.c File\tab   6\_10
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 6.5.1\tab #Define Flags\tab   6\_10
\par 6.5.2\tab Flag Default Settings\tab   6\_11
\par 6.5.3\tab Description of the Routines\tab   6\_12
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 6.6\tab Using Naautil.c as Object Code\tab   6\_14
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 6.6.1\tab MS-DOS\tab   6\_15
\par 6.6.2\tab UNIX\tab   6\_15
\par 6.6.3\tab Macintosh\tab   6\_15
\par 6.6.4\tab VAX/VMS\tab   6\_16
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 6.7\tab Supporting C Source Code Usage List\tab   6\_16
\par 6.8\tab "Numerical Analysis" Text Errors and Corrections\tab   6\_17
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 6.8.1\tab 3rd Edition Errors\tab   6\_17
\par 6.8.2\tab 4th Edition Errors\tab   6\_18
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 6.9\tab Watch for These Run-Time Errors\tab   6\_20
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 6.9.1\tab Stack Space\tab   6\_20
\par 6.9.2\tab Division By Zero\tab   6\_20
\par 6.9.3\tab Null Pointer Assignments\tab   6\_20
\par 6.9.4\tab No Disk Space\tab   6\_21
\par 6.9.5\tab Floating-Point Accuracy\tab   6\_21
\par 6.9.6\tab Program Stuck in an Infinite Loop\tab   6\_21
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 7.\tab Useful Utilities}{\cs17\f29\fs22 \tab   7\_1
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 7.1\tab Convert.c - Converting Files from Extended ASCII to Standard ASCII\tab   7\_1
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 7.1.1\tab Why Convert.c is Needed\tab   7\_1
\par 7.1.2\tab How to Use Convert.c\tab   7\_2
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 7.2\tab List.com - A Better TYPE Command\tab   7\_3
\par 7.3\tab Time-Saving Batch, Script and Command Files\tab   7\_3
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 7.3.1\tab CC.BAT\tab   7\_3
\par 7.3.2\tab CCC\tab   7\_5
\par 7.3.3\tab VAXCC.COM\tab   7\_6
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 8.\tab The Equation Evaluator Routines}{\cs17\f29\fs22 \tab   8\_1
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 8.1\tab What the Routines Do\tab   8\_1
\par 8.2\tab How to Insert the Routines into a Program\tab   8\_1
\par 8.3\tab An Example Using Simpson's Rule\tab   8\_2
\par 8.4\tab Using Eqeval.c As Pre-Compiled Object Code\tab   8\_2
\par 8.5\tab Valid Math Operators and Functions\tab   8\_3
\par 8.6\tab Sample Equations\tab   8\_4
\par 8.7\tab Possible Error Messages\tab   8\_4
\par 8.8\tab List of Algorithms Using the Equation Evaluator Routines\tab   8\_5
\par 8.9\tab Limitations\tab   8\_6
\par 8.10\tab Trade-Offs\tab   8\_6
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 9.\tab Portability}{\cs17\f29\fs22 \tab   9\_1
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 9.1\tab C vs ANSI C\tab   9\_2
\par 9.2\tab IBM PCs and MS-DOS\tab   9\_3
\par 9.3\tab UNIX Workstations\tab   9\_3
\par 9.4\tab Macintosh Computers\tab   9\_4
\par 9.5\tab VAX Mainframes\tab   9\_5
\par 9.6\tab Tested Compilers\tab   9\_5
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 10.\tab Sample License Agreements}{\cs17\f29\fs22 \tab   10\_1
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 10.1\tab Individual License Sample\tab   10\_1
\par 10.2\tab University/Corporation Site License Sample\tab   10\_3
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 11.\tab Packaging Information}{\cs17\f29\fs22 \tab   11\_1
\par }\pard \ql \fi-576\li1008\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin1008\itap0 {\cs17\f29\fs22 11.1\tab MS-DOS Diskettes\tab   11\_1
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 11.1.1\tab 5\'bc" 1.2M High Density Diskettes\tab   11\_1
\par 11.1.2\tab 5\'bc" 360K Low Density Diskettes\tab   11\_2
\par 11.1.3\tab 3\'bd" 1.44M High Density Diskettes\tab   11\_2
\par 11.1.4\tab 3\'bd" 720K Low Density Diskettes\tab   11\_2
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 11.2\tab Macintosh Diskettes\tab   11\_2
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 11.2.1\tab 3\'bd" 800K Macintosh Diskettes\tab   11\_3
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 12.\tab Purchasing Information}{\cs17\f29\fs22 \tab   12\_1
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 12.1\tab $20.00 Club\tab   12\_1
\par 12.2\tab Order Form\tab   12\_1
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 References}{\cs17\f29\fs22 \tab   12\_2
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 Appendix A:\tab C Source Code for 041.C}{\cs17\f29\fs22 \tab   A\_1
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-432\li432\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin432\itap0 {\cs17\b\f29\fs22 Appendix B:\tab C Source Code for NAAUTIL.C}{\cs17\f29\fs22 \tab   B\_1
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-1872\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\b\f29\fs22 Appendix C:\tab Language Comparison Charts}{\cs17\f29\fs22 \tab   C\_1
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 C.1\tab C vs Ada\tab   C\_2
\par C.2\tab C vs BASIC\tab   C\_8
\par C.3\tab C vs C++\tab   C\_13
\par C.4\tab C vs FORTRAN\~77\tab   C\_14
\par C.5\tab C vs Pascal\tab   C\_20
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \fi-1872\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\b\f29\fs22 Appendix D:\tab Sample Programs in Other Languages}{\cs17\f29\fs22 \tab   D\_1
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 D.1\tab Ada\tab   D\_2
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 D.1.1\tab SIMPSON.ADA\tab   D\_2
\par D.1.2\tab NAAUTIL.ADA\tab   D\_4
\par D.1.3\tab SIMPSON.IN\tab   D\_6
\par D.1.4\tab SIMPSON.OUT\tab   D\_6
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 D.2\tab BASIC\tab   D\_7
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 D.2.1\tab SIMPSON.BAS\tab   D\_7
\par D.2.2\tab SIMPSON.IN\tab   D\_8
\par D.2.3\tab SIMPSON.OUT\tab   D\_9
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 D.3\tab C\tab   D\_10
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 D.3.1\tab SIMPSON.C\tab   D\_10
\par D.3.2\tab NAAUTIL.H\tab   D\_11
\par D.3.3\tab SIMPSON.IN\tab   D\_14
\par D.3.4\tab SIMPSON.OUT\tab   D\_14
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 D.4\tab C++\tab   D\_15
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 D.4.1\tab SIMPSON.CPP\tab   D\_15
\par D.4.2\tab NAAUTIL.HPP\tab   D\_16
\par D.4.3\tab SIMPSON.IN\tab   D\_18
\par D.4.4\tab SIMPSON.OUT\tab   D\_18
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 D.5\tab FORTRAN\~77\tab   D\_19
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 D.5.1\tab SIMPSON.FOR\tab   D\_19
\par D.5.2\tab SIMPSON.IN\tab   D\_21
\par D.5.3\tab SIMPSON.OUT\tab   D\_21
\par }\pard \ql \fi-576\li1008\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1008\itap0 {\cs17\f29\fs22 D.6\tab Pascal\tab   D\_22
\par }\pard \ql \fi-864\li1872\ri432\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin432\lin1872\itap0 {\cs17\f29\fs22 D.6.1\tab SIMPSON.PAS\tab   D\_22
\par D.6.2\tab NAAUTIL.INC\tab   D\_24
\par D.6.3\tab NAAMATH.INC\tab   D\_25
\par D.6.4\tab SIMPSON.IN\tab   D\_25
\par D.6.5\tab SIMPSON.OUT\tab   D\_25
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 }}\pard\plain \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24 
\par }{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\fs24 \page \sect }\sectd \sbknone\pgnrestart\linex0\footery1380\endnhere\sectdefaultcl {\footerl \pard\plain \s23\qr \li0\ri0\nowidctlpar
\tqc\tx4320\tqr\tx8640\pvpg\phpg\posx10944\posy15120\absw576\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cs24 PAGE  }}{\fldrslt {\cs24\lang1024\langfe1024\noproof 4}}}{\cs24 
\par }\pard\plain \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs19\b\f29\fs18 1-\chpgn   Introduction\tab Numerical Analysis Algorithms in C
\par }}{\footerr \pard\plain \s23\qr \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\pvpg\phpg\posx10944\posy15120\absw576\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cs24 PAGE  }}{\fldrslt {
\cs24\lang1024\langfe1024\noproof 3}}}{\cs24 
\par }\pard\plain \ql \li0\ri0\widctlpar\tx0\tx432\tx1008\tx1872\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs19\b\f29\fs18 Version 4.2\tab Introduction  1-\chpgn 
\par }}\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\fs22 
\par 
\par 
\par }{\cs15\b\f29\fs40 1.\tab Introduction}{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs15\b\v\f29\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs15\b\f29\fs40 1.\tab Introduction}}}{\fs22 
\par 
\par 
\par "Numerical Analysis Algorithms in C" contains 116 stand-alone programs implementing the algorithms found in the texts:
\par 
\par }\pard \qc \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 "Numerical Analysis", third and fourth edition,
\par Richard L. Burden & J. Douglas Faires, 1988.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par Each program is written in ANSI C to make them more portable to other computer systems.  They should run on any computer with a reasonable C compiler, such as IBM PCs, UNIX workstations, VAXes, and Macintoshes.
\par 
\par The "Numerical Analysis" text, hereafter referred to as "the text", covers the following numerical topics:
\par 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\fs22 \tab Chapter 1\tab - Mathematical Preliminaries

\par \tab Chapter 2\tab - Solutions of equations in one variable
\par \tab Chapter 3\tab - Interpolation and polynomial approximation
\par \tab Chapter 4\tab - Numerical differentiation and integration
\par \tab Chapter 5\tab - Initial-value problems for ordinary differential equations
\par \tab Chapter 6\tab - Direct methods for solving linear systems
\par \tab Chapter 7\tab - Iterative techniques in matrix algebra
\par \tab Chapter 8\tab - Approximation theory
\par \tab Chapter 9\tab - Approximating eigenvalues
\par \tab Chapter 10\tab - Numerical solutions of nonlinear systems of equations
\par \tab Chapter 11\tab - Boundary-value problems for ordinary differential equations
\par \tab Chapter 12\tab - Numerical solutions to partial differential equations
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22  
\par From these topics, "Numerical Analysis Algorithms in C" has
 programmed routines for: vector and matrix manipulation, linear equations (LU decomposition/backsolving, matrix inversion, etc.), matrix/vector norms, eigenvalue/vectors, complex number and polynomial manipulation, least-square polynomial approximation, 
FFTs, numerical integration, root finding, solution of nonlinear equations, Taylor polynomial approximation, cubic splines, derivatives, ordinary and partial differentiation.
\par 
\par This User's Manual will help you to use these programs to their fullest potential
.  It will walk you through an example, tutor you if you are unfamiliar with the C language, introduce you to several useful utilities, and assist you when running these programs on different computer systems.
\par 
\par 
\par }{\cs18\b\f29\fs32 1.1\tab Getting Started }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 1.1\tab Getting Started \tcl2}}}{\fs22 
\par 
\par To install "Numerical Analysis Algorithms in C" onto your computer system, see Chapter 2 - "Installation."  If you are new to the C programming language, you may wish to read through Chapter 5 - "For Those New to C."  If you want a detailed examp
le using various C compilers and operating systems, see Chapter 4 - "Step-By-Step Examples on Various Computer Systems."
\par 
\par This software package contains about 1.5M bytes of files.  If disk space is limited, then just copy the eight 
supporting ".c" files ("complex.c", "eqeval.c", "gaussj.c", "naautil.c", "naautil2.c", "naautil3.c", "round.c" and "trunc.c") and the desired algorithms onto your disk.  The eight supporting files require about 100K of disk space.  If you are running thes
e algorithms from a floppy disk, be sure to leave the write protect tab off so the programs can save their output to a file.  If this is undesirable, see Sub-Section 6.1.4 - "Optional File Saving."
\par 
\par If you feel comfortable with C, go ahead and compile and r
un an algorithm.  The source code is very readable and user friendly.  To see what the algorithm numbers correspond to, see Section 3.1 - "Algorithm Files."  This is the most important list in this manual and should be printed out for frequent reference. 
 Section 3.1 is also given in the file "readme.doc" for your convenience.
\par 
\par 
\par }{\cs18\b\f29\fs32 1.2\tab Purpose of the Programs }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 1.2\tab Purpose of the Programs \tcl2}}}{\fs22 
\par 
\par These programs are fast, but are not optimized for speed.  As stated by the authors in the text's preface:
\par 
\par }\pard \ql \li1152\ri1152\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin1152\lin1152\itap0 {\fs22 "Al
though the algorithms will lead to correct programs for the examples and exercises in the text, it must be emphasized that there has been no attempt to write general-purpose software.  In particular, the algorithms have not always been listed in the form 
that leads to the most efficient program in terms of either time or storage requirements."
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par The purpose of these programs is to teach students numerical methods, not programming and optimization skills.  For a good book of general-purpose mathematical softw
are, see the book "Numerical Recipes in C" listed in the references.  These programs can also be used as a tool for building other programs.  Once the algorithms are understood, they can be more easily enhanced for general-purpose applications.
\par 
\par 
\par }{\cs18\b\f29\fs32 1.3\tab For Instructors }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 1.3\tab For Instructors \tcl2}}}{\fs22 
\par 
\par This software package is intended to be used by instructors of numerical methods/analysis courses.  The best way to learn numerical methods is to program the algorithms from scratch and have them run on a comput
er.  This is a time consuming process and may take a "good" programmer from 1 to 5 hours per program.  Students can best benefit from these programs AFTER taking the appropriate numerical analysis courses.
\par 
\par 
\par }{\cs16\b\f29\fs26 1.3.1\tab "Numerical Analysis" Authors' Recommendations }{\pard\plain \ql \li0\ri0\widctlpar
\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \cs16\b\v\f29\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs16\b\f29\fs26 1.3.1
\tab "Numerical Analysis" Authors' Recommendations \tcl3}}}{\fs22 
\par 
\par The authors of the text "Numerical Analysis" mention in the preface that:
\par 
\par }\pard \ql \li1152\ri1152\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin1152\lin1152\itap0 {\fs22 
"Actual programs are not included because, in our experience, this encourages some students to generate results without fully understanding the method involved."
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par In other words, as an instructor, you may consider giving your students only selected main algorithms, and definitely not the "Homework Helpers" algorithms as discussed below.
\par 
\par 
\par }{\cs16\b\f29\fs26 1.3.2\tab Homework Helpers }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs16\b\v\f29\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs16\b\f29\fs26 1.3.2\tab Homework Helpers \tcl3}}}{\fs22 
\par 
\par Roughly half of the included programs are labeled as "Homework Helpers."  Most of these programs modify the given text algorithms to satisfy the homework exercises in the text.  An example of this is turn
ing Algorithm 2.4 - Secant Method ("024.c") into the Method of False Position ("024B.c").  Use these "homework helpers" to correct homework assignments.  Do NOT just give these out to your students.  Most modifications will take only a short time to imple
ment, }{\fs22\ul once the algorithm is understood}{\fs22 .
\par 
\par 
\par }{\cs16\b\f29\fs26 1.3.3\tab Modifying Programs }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs16\b\v\f29\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs16\b\f29\fs26 1.3.3\tab Modifying Programs \tcl3}}}{\fs22 
\par 
\par These algorithms are given as a learning tool.  Modifying them is part of the learning process.  These algorithms may be modified by the instructor or 
by the students, even though this package is copyrighted.  They may not, however, be altered to be resold for profit without prior written consent from the programmer.  See the sample licensing agreements in Chapter 10 for more details.
\par 
\par 
\par }{\cs16\b\f29\fs26 1.3.4\tab Intentionally Introducing Errors }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs16\b\v\f29\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs16\b\f29\fs26 1.3.4\tab Intentionally Introducing Errors \tcl3}}}{\fs22 
\par 
\par As an alternative to withholding these programs from your students, you may wish to give them a copy with 
intentionally introduced errors.  This would cause them to search the entire program over for correctness, bridging the gap between giving too little or too much information.
\par 
\par 
\par }{\cs18\b\f29\fs32 1.4\tab Product Support }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 1.4\tab Product Support \tcl2}}}{\fs22 
\par 
\par If questions arise, rangi
ng from getting these algorithms to work with your compiler to adapting a particular algorithm to a specific application, just call CARE-FREE SOFTWARE at 1-801-785-0464.  The programmer will answer your questions at no charge other than the normal phone c
harges on your monthly phone statement.  Enhancements, recommendations and bug reports are always welcomed.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\fs24 \page \sect }\sectd \sbknone\pgnrestart\linex0\footery1380\endnhere\sectdefaultcl {\footerl \pard\plain \s23\qr \li0\ri0\nowidctlpar
\tqc\tx4320\tqr\tx8640\pvpg\phpg\posx10944\posy15120\absw576\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cs24 PAGE  }}{\fldrslt {\cs24\lang1024\langfe1024\noproof 4}}}{\cs24 
\par }\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs19\b\f29\fs18 2-\chpgn   Installation\tab Numerical Analysis Algorithms in C
\par }}{\footerr \pard\plain \s23\qr \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\pvpg\phpg\posx10944\posy15120\absw576\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cs24 PAGE  }}{\fldrslt {
\cs24\lang1024\langfe1024\noproof 3}}}{\cs24 
\par }\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs19\b\f29\fs18 Version 4.2\tab Installation  2-\chpgn 
\par }}\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\fs22 
\par 
\par 
\par }{\cs15\b\f29\fs40 2.\tab Installation}{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs15\b\v\f29\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs15\b\f29\fs40 2.\tab Installation}}}{\fs22 
\par 
\par 
\par }{\cs18\b\f29\fs32 2.1\tab Basic Installation Procedures }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 2.1\tab Basic Installation Procedures \tcl2}}}{\fs22 
\par 
\par 
\par The "Numerical Analysis Algorithms in C" programs do not come with an installation program.  To install these algorithms onto your computer, do the following steps:
\par 
\par }\pard \ql \fi-576\li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 1.\tab 
Make a set of backup diskettes.  See your operating system manual for specifics.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-576\li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 2.\tab 
Make another set of "working" diskettes or copy the diskettes onto your hard disk.  All 500+ files combined require less than 1.5M bytes of disk space.  Only a couple of the files are required at a time to get the algorithms to work properly, making them 
useful even on systems without a hard disk.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-576\li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 3.\tab 
You may want to convert each file on the "working" disk from extended ASCII to standard ASCII.  This is usually required for Macintoshes, most UNIX computers, and VAXes.  Failure to do so may result in scrambl
ed looking output characters.  Use "convert.exe", as explained in Section 7.1, to do this task relatively easily.  Macintosh disks ordered from Care-Free Software have had this step done already.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-576\li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 4.\tab 
It is recommended that the algorithms be placed in their own sub-directory (or Macintosh folder), such as "naa42."  This sub-directory can be created and entered by typing one of the following sets of commands:
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par \tab MS-DOS:
\par \tab \tab }{\cs20\f2\fs24 C:\\> MD NAA42}{\fs22 \tab \tab \tab \tab - make directory
\par \tab \tab }{\cs20\f2\fs24 C:\\> CD NAA42}{\fs22  \tab \tab \tab \tab - change directory
\par \tab \tab }{\cs20\f2\fs24 C:\\NAA42> DIR /P}{\fs22 \tab \tab \tab - show directory contents
\par 
\par \tab UNIX:
\par \tab \tab }{\cs20\f2\fs24 % mkdir naa42}{\fs22 \tab \tab \tab \tab - make directory
\par \tab \tab }{\cs20\f2\fs24 % chdir naa42}{\fs22 \tab \tab \tab \tab - change directory
\par \tab \tab }{\cs20\f2\fs24 % pwd}{\fs22 \tab \tab \tab \tab \tab \tab - show current directory
\par \tab \tab }{\cs20\f2\fs24 % ls -alF}{\fs22 \tab \tab \tab \tab \tab - show directory contents
\par 
\par \tab VAX/VMS:
\par \tab \tab }{\cs20\f2\fs24 $ CREATE/DIR [SMITH.NAA42]}{\fs22 \tab - make directory
\par \tab \tab }{\cs20\f2\fs24 $ SET DEFAULT [.NAA42]}{\fs22 \tab \tab - change directory
\par \tab \tab }{\cs20\f2\fs24 $ SHOW DEFAULT}{\fs22 \tab \tab \tab \tab - show current directory
\par \tab \tab }{\cs20\f2\fs24 $ DIR/SIZE/DATE}{\fs22 \tab \tab \tab \tab - show directory contents
\par 
\par }\pard \ql \fi-576\li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 5.\tab 
To be able to run every program from a floppy diskette, eight support files are required:
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\faauto\rin0\lin0\itap0 {\cs20\f2\fs24 \tab complex.c\tab naautil.c\tab round.c
\par \tab eqeval.c\tab naautil2.c\tab trunc.c
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\cs20\f2\fs24 \tab gaussj.c\tab naautil3.c\tab }{\fs22 
\par 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
These files require about 100K bytes of disk space.  The desired algorithm files such as "041.c" are also needed.  The majority of the algorithms need only "naautil.c" which is about 20K bytes large.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-576\li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 6.\tab 
If the programs do not compile correctly, you may need to change some flags inside the "naautil.c" file.  Use your text editor to modify this file.  The contents of "naautil.c" should be self-documenting.  These flags are defined near the top of the fil
e.  See Section 6.5 - "Explanation of the Naautil.c File" if more detailed information is desired.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
In the event that nothing seems to be working, you can set both the EQ_EVAL and the FILE_SAVE flags 
to FALSE.  This will disable the options to save the output to a file and to use the Equation Evaluator routines, but the algorithms will usually work.  These two options use variable length argument lists, which may not work on older compilers.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-576\li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 7.\tab If all
 else fails, ask another C programmer for help or call CARE-FREE SOFTWARE for free technical support.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par 
\par }{\cs18\b\f29\fs32 2.2\tab Uploading to Mainframe Computers }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 2.2\tab Uploading to Mainframe Computers \tcl2}}}{\fs22 
\par 
\par To get these programs onto many workstations or mainframe computers, communications software is usually required.  A well-supported communications protocol is known as Kermit.  An example using Kermit looks something like this:
\par 
\par }\pard \ql \fi-1152\li1152\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1152\itap0 {\fs22 NOTE:\tab 
This example uses CALL/ProComm to transfer files onto a VAX/UNIX workstation.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-576\li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 1.\tab 
Log onto the mainframe using CALL, ProComm or your favorite communications package.  Select kermit as the transfer protocol.  Use binary mode to send files containing extended ASCII characters.  Use ASCII mode if the files have been converted to standard 
ASCII by the "convert.exe" program.  Binary mode is slower than ASCII mode.  Remember that C files are case sensitive.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-576\li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 2.\tab 
On the mainframe, change to an appropriate directory and type:
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 For a VAX, type:
\par }\pard \ql \fi-4608\li5760\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin5760\itap0 {\cs20\f2\fs24 $ use kermit}{\fs22 \tab \tab \tab \tab 
\tab (Do NOT type "}{\cs20\f2\fs24 $ kermit}{\fs22 ")
\par }\pard \ql \fi-5184\li6336\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin6336\itap0 {\cs20\f2\fs24 Kermit-32> set file_type binary}{\fs22 
\tab (or:  }{\cs20\f2\fs24 set file_type ascii}{\fs22 )
\par }\pard \ql \li1152\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1152\itap0 {\cs20\f2\fs24 Kermit-32> receive}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 For a UNIX workstation, type:
\par }\pard \ql \li1152\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1152\itap0 {\cs20\f2\fs24 % kermit}{\fs22 
\par }\pard \ql \fi-4608\li5760\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin5760\itap0 {\cs20\f2\fs24 Kermit-32> set binary}{\fs22 \tab \tab 
\tab (or:  }{\cs20\f2\fs24 set ascii}{\fs22 )
\par }\pard \ql \li1152\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1152\itap0 {\cs20\f2\fs24 Kermit-32> receive}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-576\li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 3.\tab 
On your PC, immediately issue the file sending commands.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 For CALL, type:
\par }\pard \ql \li1152\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1152\itap0 {\cs20\f2\fs24 [F9] }{\cs20\b\f2\fs24 F}{\cs20\f2\fs24 ile }{
\cs20\b\f2\fs24 S}{\cs20\f2\fs24 end }{\cs20\b\f2\fs24 K}{\cs20\f2\fs24 ermit}{\fs22 
\par }{\cs20\f2\fs24 File to transfer: filename}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 For ProComm, type:
\par }\pard \ql \li1152\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1152\itap0 {\cs20\f2\fs24 [ALT] K}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 \tab \tab }{\cs20\f2\fs24 2) Send}{\fs22 
\par }\pard \ql \li1152\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1152\itap0 {\cs20\f2\fs24 Please enter filespec: filename}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-576\li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 4.\tab 
Patiently wait as the file(s) are transferred to the mainframe.  The use of wild cards is recommended (ie - }{\cs20\f2\fs24 *.C}{\fs22  instead of }{\cs20\f2\fs24 filename}{\fs22 ).
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-576\li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 5.\tab Exit kermit on the mainframe.
\par }\pard \ql \li1152\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1152\itap0 {\cs20\f2\fs24 Kermit-32> exit}{\fs22 
\par }{\cs20\f2\fs24 $ logout}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par A host full of other issues have been left to the user, such as baud rate, parity, stop bits, duplex, use of wild cards, etc.  These are unique to each computer system and communications software package.
\par 
\par You may want to convert the files from extended ASCII to standard ASCII (using "convert.c") before uploading them to a mainframe computer.  If you plan to view and print your work on an IBM PC but compile and run the algorithms on a mainframe, you ma
y want to keep the files in extended ASCII.
\par 
\par Test your preferences using Algorithm 4.1 ("041.c").  It uses three different extended ASCII characters to form an integral sign: '}{\cs20\f30\fs24 \'21}{\fs22 ', '}{\cs20\f30\fs24 \'23}{\fs22 ' and '}{\cs20\f30\fs24 \'22}{\fs22 
'.  "Convert.c" changes these three characters into standard ASCII: '}{\cs20\f2\fs24 [}{\fs22 ', '}{\cs20\f2\fs24 |}{\fs22 ' and '}{\cs20\f2\fs24 ]}{\fs22 '.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\fs24 \page \sect }\sectd \sbknone\pgnrestart\linex0\footery1380\endnhere\sectdefaultcl {\footerl \pard\plain \s23\qr \li0\ri0\nowidctlpar
\tqc\tx4320\tqr\tx8640\pvpg\phpg\posx10944\posy15120\absw576\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cs24 PAGE  }}{\fldrslt {\cs24\lang1024\langfe1024\noproof 4}}}{\cs24 
\par }\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs19\b\f29\fs18 3-\chpgn   "Numerical Analysis Algorithms in C" Files\tab Numerical Analysis Algorithms in C
\par }}{\footerr \pard\plain \s23\qr \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\pvpg\phpg\posx10944\posy15120\absw576\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cs24 PAGE  }}{\fldrslt {
\cs24\lang1024\langfe1024\noproof 3}}}{\cs24 
\par }\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs19\b\f29\fs18 Version 4.2\tab "Numerical Analysis Algorithms in C" Files  3-\chpgn 
\par }}\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\fs22 
\par 
\par 
\par }{\cs15\b\f29\fs40 3.\tab "Numerical Analysis Algorithms in C" Files}{\pard\plain \ql \li0\ri0\widctlpar
\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \cs15\b\v\f29\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs15\b\f29\fs40 3.\tab "
Numerical Analysis Algorithms in C" Files}}}{\fs22 
\par 
\par 
\par This software package contains 116 algorithms
.  Each algorithm has been coded as a stand-alone program.  Each program prompts for input, executes the algorithm as described in the text "Numerical Analysis", and prints the results.  Other math packages provide only subroutines, requiring a programmer
 to insert them inside a program and either hard code or prompt for the inputs and print the outputs.
\par 
\par The files are catagorized as follows, where "nnn" represent algorithm numbers like "041" for Algorithm 4.1:
\par 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\fs22 a.\tab nnn.C\tab 
Algorithms from the text "Numerical Analysis" fourth edition.  (57 total)
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\fs22 b.\tab nnnA.C\tab 
Algorithms not found in the text.  Included as "Professor Favorites, Must Have" as recommended by mathematics professors at Brigham Young University.  (6 total)
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par c.\tab nnnB.C, nnnC.C, and nnnD.C
\par }\pard \ql \li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\fs22 Algorithms incl
uded as "Homework Helpers."  Some are asked for in the homework exercises while others are for helping with important concepts covered in the text.  These can save hours of coding on the homework exercises.  (53 total)
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\fs22 d.\tab *.C\tab \tab 
NAA supporting files containing 57 functions.  (8 total)
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\fs22 e.\tab *.IN  \tab 
Input files used to test each algorithm.  They match the inputs to the example problems presented after each algorithm in the text.  (116 total)
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\fs22 f.\tab *.OUT\tab Output files used to test each al
gorithm.  They match the outputs to the example problems presented after each algorithm in the text.  (116 total)
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\fs22 g.\tab *.EXE\tab 
Executable programs for each algorithm.  The default functions (like f(x)) are the same as those used in the example problems presen
ted after each algorithm in the text.  These programs must be purchased separately and are currently available only for MS-DOS and Macintosh computers.  (116 total)
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\fs22 h.\tab *.DOC\tab 
Documentation in simple text file format.  Includes "readme.doc", "revhist.doc" and "usersman.doc."
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par Each program was tested on the sample problems given in the text just after the algorithm description.  These sample solutions are found in the OUT sub-directory in files named with a ".out" extension.  Their inputs are found in the IN 
sub-directory in files named with a ".in" extension.
\par 
\par Over two-thirds of the algorithms need to be compiled only once.  They are marked with an asterisk (*) on the table below.  Of these algorithms, nearly half are able to prompt you for an equation during
 run-time.  See Chapter 8 - "The Equation Evaluator Routines" for more details.
\par 
\par 
\par }{\cs18\b\f29\fs32 3.1\tab Algorithm Files }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 3.1\tab Algorithm Files \tcl2}}}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx-720\tx0\tx1584\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9072\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par }\pard \ql \li0\ri0\keep\keepn\widctlpar\tx-720\tx0\tx1584\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9072\faauto\rin0\lin0\itap0 {\cs17\f29\fs22  
\par }{\field{\*\fldinst {\fs24 ADVANCE \\d 1}}{\fldrslt }}{\cs17\b\f29\fs22 CHAPTER 1\tab Mathematical Preliminaries}{\cs17\f29\fs22 
\par }\pard \ql \li0\ri0\keep\widctlpar\tx-720\tx0\tx1584\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9072\faauto\rin0\lin0\itap0 {\field{\*\fldinst {\fs24 ADVANCE \\u 6}}{\fldrslt }}{\cs17\f29\fs22  
\par }\pard \ql \li0\ri0\widctlpar\tx-720\tx0\tx1584\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9072\faauto\rin0\lin0\itap0 {\cs17\f29\fs22 
\par COMPLEX.C\tab - "Numerical Recipes in C" Complex Number Routines
\par EQEVAL.C\tab - Equation Evaluator Routines
\par GAUSSJ.C\tab - "Numerical Recipes in C" Gauss-Jordan Matrix Solver
\par NAAUTIL.C\tab - "Numerical Analysis Algorithms in C" Utilities I\tab (standard)
\par NAAUTIL2.C\tab - "Numerical Analysis Algorithms in C" Utilities II\tab (extended)
\par NAAUTIL3.C\tab - "Numerical Analysis Algorithms in C" Utilities III\tab (complex)
\par ROUND.C\tab - Rounds a floating-point value to SIG significant digits
\par TRUNC.C\tab - Truncates a floating-point value to SIG significant digits
\par 011B.C*\tab - Taylor Polynomial Approximation\tab \tab \tab Algorithm 1.1B
\par 
\par  
\par }{\field{\*\fldinst {\fs24 ADVANCE \\d 1}}{\fldrslt }}{\cs17\b\f29\fs22 CHAPTER 2\tab Solutions of Equations in One Variable}{\cs17\f29\fs22 
\par }{\field{\*\fldinst {\fs24 ADVANCE \\u 6}}{\fldrslt }}{\cs17\f29\fs22  
\par 
\par 021.C*\tab -  Bisection (or Binary-Search)\tab \tab \tab Algorithm 2.1
\par 022.C*\tab -  Fixed-Point\tab \tab \tab \tab \tab Algorithm 2.2
\par 023.C\tab -  Newton-Raphson\tab \tab \tab \tab Algorithm 2.3
\par 024.C*\tab -  Secant\tab \tab \tab \tab \tab Algorithm 2.4
\par 024B.C*\tab -  Method of False Position (or Regula Falsi)\tab \tab Algorithm 2.4B
\par 024C.C\tab -  Modified Newton-Raphson Method\tab \tab \tab Algorithm 2.4C
\par 025.C*\tab -  Steffensen\tab \tab \tab \tab \tab Algorithm 2.5
\par 026.C*\tab -  Horner\tab \tab \tab \tab \tab Algorithm 2.6
\par 027.C*\tab -  M\'fcller\tab \tab \tab \tab \tab Algorithm 2.7
\par 028A.C*\tab +  Complex Polynomial Solver (CPOLY)\tab \tab \tab Algorithm 2.8A
\par 
\par  
\par }{\field{\*\fldinst {\fs24 ADVANCE \\d 1}}{\fldrslt }}{\cs17\b\f29\fs22 CHAPTER 3\tab Interpolation and Polynomial Approximation}{\cs17\f29\fs22 
\par }{\field{\*\fldinst {\fs24 ADVANCE \\u 6}}{\fldrslt }}{\cs17\f29\fs22  
\par 
\par 031.C*\tab -  Neville's Iterated Interpolation\tab \tab \tab Algorithm 3.1
\par 031B.C*\tab -  Neville's Iterated Interpolation (with rounding)\tab \tab Algorithm 3.1B
\par 031C.C*\tab -  Aitken's Iterated Interpolation\tab \tab \tab Algorithm 3.1C
\par 032.C*\tab -  Newton's Interpolatory Divided-Difference Formula\tab \tab Algorithm 3.2
\par 033.C*\tab -  Hermite Interpolation\tab \tab \tab \tab Algorithm 3.3
\par 034.C*\tab -  Natural Cubic Spline\tab \tab \tab \tab Algorithm 3.4
\par 035.C*\tab -  Clamped Cubic Spline\tab \tab \tab \tab Algorithm 3.5
\par 
\par  
\par }{\field{\*\fldinst {\fs24 ADVANCE \\d 1}}{\fldrslt }}{\cs17\b\f29\fs22 CHAPTER 4\tab Numerical Differentiation and Integration}{\cs17\f29\fs22 
\par }{\field{\*\fldinst {\fs24 ADVANCE \\u 6}}{\fldrslt }}{\cs17\f29\fs22  
\par 
\par 040B1.C\tab -  1st Derivative Approximation (for functions)\tab \tab Algorithm 4.0B1
\par 040B2.C*\tab -  1st Derivative Approximation (for tabulated data)\tab \tab Algorithm 4.0B2
\par 040B3.C\tab -  1st Derivative Approximation (for functions w/TOL)\tab \tab Algorithm 4.0B3
\par 040C1.C\tab -  2nd Derivative Approximation (for functions)\tab \tab Algorithm 4.0C1
\par 040C2.C*\tab -  2nd Derivative Approximation (for tabulated data)\tab \tab Algorithm 4.0C2
\par 040D1.C*\tab -  Richardson's Extrapolation\tab \tab \tab \tab Algorithm 4.0D1
\par 040D2.C*\tab -  Richardson's Extrapolation (with rounding)\tab \tab Algorithm 4.0D2
\par 041.C*\tab -  Composite Simpson's Rule\tab \tab \tab \tab Algorithm 4.1
\par 041B.C*\tab -  Composite Trapezoidal Rule\tab \tab \tab Algorithm 4.1B
\par 041C.C*\tab -  Composite Midpoint Rule\tab \tab \tab \tab Algorithm 4.1C
\par 041D.C*\tab -  Newton-Cotes Formulas for Integrals (8 total)\tab \tab Algorithm 4.1D
\par 042.C*\tab -  Adaptive Quadrature\tab \tab \tab \tab Algorithm 4.2
\par 043.C*\tab -  Romberg\tab \tab \tab \tab \tab Algorithm 4.3
\par 043B.C*\tab -  Gaussian Quadrature\tab \tab \tab \tab Algorithm 4.3B
\par 044.C\tab -  Composite Simpson's Rule for Double Integrals\tab \tab Algorithm 4.4
\par 044B.C\tab -  Composite Trapezoid Rule for Double Integrals\tab \tab Algorithm 4.4B
\par 044C.C\tab -  Gaussian Quadrature for Double Integrals\tab \tab Algorithm 4.4C
\par 045.C\tab -  Composite Simpson's Rule for Triple Integrals\tab \tab Algorithm 4.5
\par 045B.C\tab -  Composite Trapezoid Rule for Triple Integrals\tab \tab Algorithm 4.5B
\par 045C.C\tab -  Gaussian Quadrature for Triple Integrals\tab \tab Algorithm 4.5C
\par 
\par  
\par }{\field{\*\fldinst {\fs24 ADVANCE \\d 1}}{\fldrslt }}{\cs17\b\f29\fs22 CHAPTER 5\tab Initial-Value Problems for Ordinary Differential Equations}{\cs17\f29\fs22 
\par }{\field{\*\fldinst {\fs24 ADVANCE \\u 6}}{\fldrslt }}{\cs17\f29\fs22  
\par 
\par 051.C*\tab -  Euler\tab \tab \tab \tab \tab Algorithm 5.1
\par 051B.C*\tab -  Midpoint, Modified Euler, and Heun's Methods\tab \tab Algorithm 5.1B
\par 052.C*\tab -  Runge-Kutta (Order Four)\tab \tab \tab \tab Algorithm 5.2
\par 053.C\tab -  Runge-Kutta-Fehlberg\tab \tab \tab \tab Algorithm 5.3
\par 054.C*\tab -  Adam's Fourth-Order Predictor-Corrector\tab \tab Algorithm 5.4
\par 054B.C*\tab -  Adams-Bashforth (all four) and Milne's Methods\tab \tab Algorithm 5.4B
\par 054C.C*\tab -  Milne-Simpson Predictor-Corrector\tab \tab \tab Algorithm 5.4C
\par 055.C*\tab -  Adam's Variable Step-Size Predictor-Corrector\tab \tab Algorithm 5.5
\par 056.C*\tab +  Extrapolation\tab \tab \tab \tab \tab Algorithm 5.6
\par 057.C\tab -  Runge-Kutta for Systems of Differential Equations\tab \tab Algorithm 5.7
\par 057B.C\tab -  Euler's Variable Step-Size for Systems\tab \tab \tab Algorithm 5.7B
\par 058.C\tab -  Trapezoidal with Newton Iteration\tab \tab \tab Algorithm 5.8
\par 
\par  
\par }{\field{\*\fldinst {\fs24 ADVANCE \\d 1}}{\fldrslt }}{\cs17\b\f29\fs22 CHAPTER 6\tab Direct Methods for Solving Linear Systems}{\cs17\f29\fs22 
\par }{\field{\*\fldinst {\fs24 ADVANCE \\u 6}}{\fldrslt }}{\cs17\f29\fs22  
\par 
\par 060B.C*\tab -  Matrix Inverter\tab \tab \tab \tab \tab Algorithm 6.0B
\par 060C.C*\tab -  Determinant of a Matrix\tab \tab \tab \tab Algorithm 6.0C
\par 060D.C*\tab -  Matrix Multiplier\tab \tab \tab \tab \tab Algorithm 6.0D
\par 061.C*\tab -  Gaussian Elimination with Backward Substitution\tab \tab Algorithm 6.1
\par 061B.C*\tab -  Gaussian Elimination with Backward Substitution\tab \tab Algorithm 6.1B  
\par \tab    (with rounding)
\par 061C1.C*\tab - Gauss-Jordan Method\tab \tab \tab \tab Algorithm 6.1C1
\par 061C2.C*\tab - Gauss-Jordan Method (with rounding)\tab \tab \tab Algorithm 6.1C2
\par 061D1.C*\tab - Gaussian-Elimination - Gauss-Jordan Hybrid Method\tab Algorithm 6.1D1
\par 061D2.C*\tab - Gaussian-Elimination - Gauss-Jordan Hybrid Method\tab Algorithm 6.1D2
\par \tab   (with rounding)
\par 062.C*\tab -  Gaussian Elimination with Maximal Column Pivoting\tab Algorithm 6.2
\par 062B.C*\tab -  Gaussian Elimination with Maximal Column Pivoting\tab Algorithm 6.2B
\par \tab    (with rounding)
\par 063.C*\tab -  Gaussian Elimination with Scaled Column Pivoting\tab \tab Algorithm 6.3
\par 063B.C*\tab -  Gaussian Elimination with Scaled Column Pivoting\tab \tab Algorithm 6.3B
\par \tab    (with rounding)
\par 064.C*\tab -  Direct Factorization\tab \tab \tab \tab Algorithm 6.4
\par 064B.C*\tab -  Direct Factorization which solves AX=B\tab \tab Algorithm 6.4B
\par 064C.C*\tab -  Direct Factorization with Maximal Column Pivoting\tab \tab Algorithm 6.4C
\par \tab    (3rd edition)
\par 065.C*\tab -  LDL}{\cs17\f29\fs22\super t}{\cs17\f29\fs22  Factorization\tab \tab \tab \tab Algorithm 6.5
\par 065B.C*\tab -  LDL}{\cs17\f29\fs22\super t}{\cs17\f29\fs22  Factorization which solves AX=B\tab \tab \tab Algorithm 6.5B
\par 066.C*\tab -  Choleski\tab \tab \tab \tab \tab Algorithm 6.6
\par 066B.C*\tab -  Choleski which solves AX=B\tab \tab \tab Algorithm 6.6B
\par 067.C*\tab -  Crout Reduction for Tridiagonal Linear Systems\tab \tab Algorithm 6.7
\par 
\par  
\par }{\field{\*\fldinst {\fs24 ADVANCE \\d 1}}{\fldrslt }}{\cs17\b\f29\fs22 CHAPTER 7\tab Iterative Techniques in Matrix Algebra}{\cs17\f29\fs22 
\par }{\field{\*\fldinst {\fs24 ADVANCE \\u 6}}{\fldrslt }}{\cs17\f29\fs22  
\par 
\par 070B.C*\tab -  Vector and Matrix Norms\tab \tab \tab \tab Algorithm 7.0B
\par 071.C*\tab -  Jacobi Iterative\tab \tab \tab \tab \tab Algorithm 7.1
\par 072.C*\tab -  Gauss-Seidel Iterative\tab \tab \tab \tab Algorithm 7.2
\par 073.C*\tab -  Successive Over Relaxation (SOR)\tab \tab \tab Algorithm 7.3
\par 074.C*\tab -  Iterative Refinement (with rounding)\tab \tab \tab Algorithm 7.4
\par 074B.C*\tab -  Iterative Refinement (single-precision)\tab \tab \tab Algorithm 7.4B
\par 
\par  
\par }{\field{\*\fldinst {\fs24 ADVANCE \\d 1}}{\fldrslt }}{\cs17\b\f29\fs22 CHAPTER 8\tab Approximation Theory}{\cs17\f29\fs22 
\par }{\field{\*\fldinst {\fs24 ADVANCE \\u 6}}{\fldrslt }}{\cs17\f29\fs22  
\par 
\par 080B.C*\tab -  Least-Squares Polynomial Approximation\tab \tab Algorithm 8.0B
\par 081.C*\tab +  Fast Fourier Transformation\tab \tab \tab Algorithm 8.1
\par 
\par  
\par }{\field{\*\fldinst {\fs24 ADVANCE \\d 1}}{\fldrslt }}{\cs17\b\f29\fs22 CHAPTER 9\tab Approximating Eigenvalues}{\cs17\f29\fs22 
\par }{\field{\*\fldinst {\fs24 ADVANCE \\u 6}}{\fldrslt }}{\cs17\f29\fs22  
\par 
\par 091.C*\tab -  Power Method\tab \tab \tab \tab \tab Algorithm 9.1
\par 091B.C*\tab -  Power Method with Aitken's Delta}{\cs17\f29\fs22\super 2}{\cs17\f29\fs22  Method\tab \tab Algorithm 9.1B
\par 092.C*\tab -  Symmetric Power Method\tab \tab \tab \tab Algorithm 9.2
\par 093.C*\tab -  Inverse Power Method\tab \tab \tab \tab Algorithm 9.3
\par 094.C*\tab -  Wielandt's Deflation\tab \tab \tab \tab Algorithm 9.4
\par 094B.C*\tab -  Wielandt's Deflation using Power Method for lambda1\tab Algorithm 9.4B
\par O095.C*\tab -  Householder Method\tab \tab \tab \tab Algorithm 9.5
\par 095B.C*\tab -  Householder Method (3rd edition)\tab \tab \tab Algorithm 9.5B
\par 095C.C*\tab -  Householder Method for Non-Symmetric Matrices\tab \tab Algorithm 9.5C
\par \tab    (Upper Hessenberg)
\par 095D.C*\tab -  Householder Method (with rounding)\tab \tab \tab Algorithm 9.5D
\par 096.C*\tab -  QR Algorithm\tab \tab \tab \tab \tab Algorithm 9.6
\par 096B.C*\tab -  QL Algorithm (3rd edition)\tab \tab \tab \tab Algorithm 9.6B
\par 
\par  
\par }{\field{\*\fldinst {\fs24 ADVANCE \\d 1}}{\fldrslt }}{\cs17\b\f29\fs22 CHAPTER 10\tab Numerical Solutions of Nonlinear Systems of Equations}{\cs17\f29\fs22 
\par }{\field{\*\fldinst {\fs24 ADVANCE \\u 6}}{\fldrslt }}{\cs17\f29\fs22  
\par 
\par 101.C\tab -  Newton's Method for Systems\tab \tab \tab Algorithm 10.1
\par 101A.C\tab -  Steffensen's Method for Systems\tab \tab \tab Algorithm 10.1A
\par 102.C\tab -  Broyden's Method for Systems\tab \tab \tab Algorithm 10.2
\par 103.C\tab -  Steepest Descent Method (with F(x) and J(x))\tab \tab Algorithm 10.3
\par 103B.C\tab -  Steepest Descent Method (with G(x) and gradG(x))\tab Algorithm 10.3B
\par 
\par  
\par }{\field{\*\fldinst {\fs24 ADVANCE \\d 1}}{\fldrslt }}{\cs17\b\f29\fs22 CHAPTER 11\tab Boundary-Value Problems for Ordinary Differential Equations}{\cs17\f29\fs22 
\par }{\field{\*\fldinst {\fs24 ADVANCE \\u 6}}{\fldrslt }}{\cs17\f29\fs22  
\par 
\par 111.C\tab -  Linear Shooting\tab \tab \tab \tab \tab Algorithm 11.1
\par 112.C\tab -  Nonlinear Shooting with Newton's Method\tab \tab Algorithm 11.2
\par 112B.C\tab -  Nonlinear Shooting with Secant Method\tab \tab Algorithm 11.2B
\par 113.C\tab -  Linear Finite Difference\tab \tab \tab \tab Algorithm 11.3
\par 113B.C\tab -  Linear Finite Difference (Richardson's Extrapolation)\tab Algorithm 11.3B
\par 114.C\tab -  Nonlinear Finite Difference\tab \tab \tab \tab Algorithm 11.4
\par 114B.C\tab -  Nonlinear Finite Difference (Richardson's Extrapolation)\tab Algorithm 11.4B
\par 115.C\tab -  Piecewise Linear Rayleigh-Ritz\tab \tab \tab Algorithm 11.5
\par 116.C\tab -  Cubic Spline Rayleigh-Ritz\tab \tab \tab \tab Algorithm 11.6
\par 
\par  
\par }{\field{\*\fldinst {\fs24 ADVANCE \\d 1}}{\fldrslt }}{\cs17\b\f29\fs22 CHAPTER 12\tab Numerical Solutions to Partial-Differential Equations}{\cs17\f29\fs22 
\par }{\field{\*\fldinst {\fs24 ADVANCE \\u 6}}{\fldrslt }}{\cs17\f29\fs22  
\par 
\par 121.C\tab -  Poisson Equation Finite-Difference (Elliptic)\tab \tab Algorithm 12.1
\par 122.C*\tab -  Heat Equation Backward-Difference (Parabolic)\tab \tab Algorithm 12.2
\par 122B.C*\tab -  Heat Equation Forward-Difference (Parabolic)\tab \tab Algorithm 12.2B
\par 122C.C*\tab -  Heat Equation Richardson's Method (Parabolic)\tab \tab Algorithm 12.2C
\par 123.C*\tab -  Crank-Nicolson (Parabolic)\tab \tab \tab \tab Algorithm 12.3
\par 124.C\tab -  Wave Equation Finite-Difference (Hyperbolic)\tab \tab Algorithm 12.4
\par 125.C\tab -  Finite-Element\tab \tab \tab \tab \tab Algorithm 12.5
\par 126A.C\tab -  Parabolic Equations With Newton Iteration in 1-D\tab \tab Algorithm 12.6A
\par 127A.C\tab -  Parabolic Equations With Newton Iteration in 2-D\tab \tab Algorithm 12.7A
\par 128A.C\tab -  Elliptic Equations With Newton Iteration in 2-D\tab \tab Algorithm 12.8A
\par 129A.C\tab -  Biharmonic Equation Using Gauss-Jordan Method\tab \tab Algorithm 12.9A}{\fs22 
\par 
\par The '+'s above mean the program may need a larger stack when compiled and linked.
\par The '*'s above mean the program needs to be compiled only once.
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\cs18\b\f29\fs32 3.3\tab Supporting C Source Code }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 3.3\tab Supporting C Source Code \tcl2}}}{\fs22 
\par 
\par The eight files below are needed to compile each and every program.  Most algorithms require only one or two of them at a time.
\par 
\par }{\b\fs22 COMPLEX.C}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Complex.c" contain several routines for operating on complex numbers.  It originated from the book "Numerical Recipes in C" and is only used in "naautil3.c."
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 EQEVAL.C}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Eqeval.c" contains the Equation Evaluator routines.  These routines enable a program to enter and evaluate an equation during run-time. It is useful within algorithms that need to evaluate a single function such as f(x) or f(y,t).  It is used by 34 algor
ithms.  See Chapter 8 - "The Equation Evaluator Routines" for more details on this file.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 GAUSSJ.C}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Gaussj.c" is a Gauss-Jordan matrix solver routine.  It originated from the book "Numerical Recipes in C."  It is used by only 9 of the algorithms.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 NAAUTIL.C}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Naautil.c" contain important routines used by all of the algorithms.  Most are for dynamically allocating memory for arrays.  Some of the routines originated from the book "Numerical Recipes in C."  See Section 6.5 - "Explanation of the Naautil.c File."

\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 NAAUTIL2.C}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Naautil2.c" contains more dynamically allocated memory routines for less-used data types.  it is used only 2 times.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 NAAUTIL3.C}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Naautil3.c" contains more dynamically allocated memory routines for complex data types.  It is used only 3 times.
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\b\fs22 ROUND.C}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Round.c" rounds a floating-point value to SIG significant digits.  Only 9 algorithms currently use this function.  See Sub-Section 6.1.10 to see how this file is used.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 TRUNC.C}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Trunc.c" truncates, or chops, a floating-point value to SIG significant digits.  None of the algorithms use this function, but it can easily replace "round.c."
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par 
\par }{\cs18\b\f29\fs32 3.4\tab Documentation Files }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 3.4\tab Documentation Files \tcl2}}}{\fs22 
\par 
\par Previous versions of "Numerical Analysis Algorithms in C" consisted of only two document files: "readme.doc" and "math.doc."  With version 4.2, these documents have been consolidated and greatly expanded into this User's Manual ("usersman.doc").  Three do
cument files are included as listed below.
\par 
\par }{\b\fs22 README.DOC}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Readme.doc" gives a list of all the algorithms as well as an order form.  This information can also be found inside the User's Manual.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 REVHIST.DOC}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 "Revhist.doc" gives a detailed list of all changes ma
de to each version of "Numerical Analysis Algorithms in C".  It lists the additions, corrections, and changes made to each algorithm, to the supporting files, and to the documentation.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 USERSMAN.DOC}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 "Usersman.doc" is this User's Manual in DOS text format. 
 This format is readable by all text editors and word processors.  It can be read using MS-DOS's "type" command or the "list.com" utility included with the diskettes.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par 
\par }{\cs18\b\f29\fs32 3.5\tab Utility Files }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 3.5\tab Utility Files \tcl2}}}{\fs22 
\par 
\par }{\b\fs22 041EE.C}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 "041ee.c" is an example of ho
w to integrate the equation evaluator routines into an algorithm.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 041FUN.C}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"041fun.c" is an example of Algorithm 4.1 turned into a stand-alone function.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 CONVERT.C}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Convert.c" is the C source code for a utility which translates text files into standard seven-bit ASCII files.  It is useful before placing these algorithms on non-MS-DOS computers, such as UNIX and VAX computers.  See Section 7.1 - "Convert.c - Converti
ng Files from Extended ASCII to Standard ASCII."
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 CONVERT.EXE}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 "Convert.exe" is the MS-DOS executable of "convert.c."
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 LISTALL}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Listall" is a text file listing all source code files on the root directory of the distribution disks.  It can be used with "convert.exe" to convert all the programs at once.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 LISTOUT}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Listout" is a text file listing all output files in the OUT sub-directory of the distribution disks.  It can be used with "convert.exe" to convert all of the output files at once.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 LIST.COM}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 "List.com" 
is an MS-DOS program which acts as a better "TYPE" command.  It uses the arrow keys and other editing keys to view text files.  "List.com" does not allow you to edit files, just view them.  It is a public domain program.  See Section 7.2 - "List.com - A b
etter TYPE Command" for instructions on how to use it.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par 
\par }{\cs18\b\f29\fs32 3.6\tab Batch, Script and Command Files }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 3.6\tab Batch, Script and Command Files \tcl2}}}{\fs22 
\par 
\par Three commands text files are included to simplify the task of compiling and running the algorithms on different computer systems.
\par 
\par }{\b\fs22 CC.BAT}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Cc.bat" is an MS-DOS batch file used for compiling, running and viewing a Microsoft C 5.0 program.  It can be easily altered to allow for linking to "naautil.c" and "eqeval.c" object files, speeding up the compile time.  It can a
lso be altered to increase the stack size of a program.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 CCC}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Ccc" is a UNIX script file used for compiling, running, and viewing a C program.  It can be easily altered to allow for linking to "naautil.c" object code, speeding up the compile time.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }{\b\fs22 VAXCC.COM}{\fs22 
\par }\pard \ql \li576\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin576\itap0 {\fs22 
"Vaxcc.com" is a VAX/VMS command file used for compiling and linking a mathematical VAX C program.  It can be easily altered to allow for linking to "naautil.c" object code, speeding up the compile time.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs24 \page }{\cs18\b\f29\fs32 3.7\tab File Structure Chart }
{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 3.7\tab File Structure Chart \tcl2}}}{\fs22 
\par 
\par The chart below describes how the files are organized on the distribution diskettes.
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\faauto\rin0\lin0\itap0 {\cs20\f2\fs24                                  / (root)
\par                                     }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24 
\par       }{\cs20\f31\fs24 \u-4053\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4048\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4048\'3f\u-4055\'3f\u-4055\'3f
\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4048\'3f\u-4055\'3f\u-4055\'3f\u-4046\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4048\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f
\u-4055\'3f\u-4048\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4052\'3f}{\cs20\f2\fs24 
\par       }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24         }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24         }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24         }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24         }{\cs20\f31\fs24 \u-4054\'3f}{
\cs20\f2\fs24         }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24         }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24                 *.C     *.DOC     UTIL    LANGS     IN       OUT      EXE                                  }{\cs20\f31\fs24 \u-4054\'3f}{
\cs20\f2\fs24         }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24         }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24         }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24         }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24 
\par                         }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24         }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24         }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24         }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24         }{\cs20\f31\fs24 
\u-4054\'3f}{\cs20\f2\fs24  
\par                        *.*       }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24        *.IN    *.OUT    *.EXE
\par                                  }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24                       (OPTIONAL)
\par                                  }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24                                   
\par    }{\cs20\f31\fs24 \u-4053\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4048\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f
\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4048\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4046\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4048\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f
\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4048\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4052\'3f}{\cs20\f2\fs24    
\par    }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24            }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24            }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24            }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24            }{\cs20\f31\fs24 \u-4054\'3f}{
\cs20\f2\fs24            }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24  
\par   ADA        BASIC         C          CPP       FORTRAN      PASCAL  
\par    }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24            }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24            }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24            }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24            }{\cs20\f31\fs24 \u-4054\'3f}{
\cs20\f2\fs24            }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24  
\par SIMPSON.ADA SIMPSON.BAS SIMPSON.C  SIMPSON.CPP SIMPSON.FOR SIMPSON.PAS
\par NAAUTIL.ADA SIMPSON.IN  SIMPSON.H  SIMPSON.HPP SIMPSON.IN  NAAUTIL.INC
\par SIMPSON.IN  SIMPSON.OUT SIMPSON.IN SIMPSON.IN  SIMPSON.OUT NAAMATH.INC
\par SIMPSON.OUT            SIMPSON.OUT SIMPSON.OUT             SIMPSON.IN
\par                                                            SIMPSON.OUT
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par 
\par }{\cs18\b\f29\fs32 3.8\tab File Name Translation Table from 3rd to 4th Edition }{\pard\plain \ql \li0\ri0\widctlpar
\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 3.8\tab 
File Name Translation Table from 3rd to 4th Edition \tcl2}}}{\fs22 
\par 
\par This translation table correla
tes the third edition text algorithms with the fourth edition text algorithms.  The B and C extensions indicate algorithms that were changed or replaced from the third edition and retained with the fourth edition algorithms.            
\par                                                         
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\faauto\rin0\lin0\itap0 {\cs20\f2\fs24 Edition }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24  Edition       Edition }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24 
 Edition       Edition }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24  Edition
\par   3rd   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    4th           3rd   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    4th           3rd   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    4th
\par }{\cs20\f31\fs24 \u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4045\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f}{\cs20\f2\fs24       }{\cs20\f31\fs24 
\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4045\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f}{\cs20\f2\fs24       }{\cs20\f31\fs24 \u-4055\'3f\u-4055
\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4045\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f\u-4055\'3f}{\cs20\f2\fs24 
\par   2.1   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    2.1           5.3   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    5.3           8.6   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    9.2
\par   2.2   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    2.2           5.4   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    5.4           8.7   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    9.3
\par   2.3   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    2.3           5.5   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    5.5           8.8   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    9.4
\par   2.4   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    2.4           5.6   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    5.6           8.9   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    9.5
\par   2.5   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    2.5           5.7   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    5.7           8.10  }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    9.6B
\par   2.6   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    2.6           5.8   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    5.8           9.1   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   10.1
\par   2.7   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    2.7           6.1   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    6.1           9.2   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   10.2
\par   3.1   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    3.1           6.2   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    6.2           9.3   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   10.3
\par   3.2   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    3.2           6.3   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    6.3          10.1   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   11.1
\par   3.3   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    3.3           6.4   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    6.4          10.2   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   11.2
\par   3.4   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    3.4           6.5   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    6.4C         10.3   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   11.3
\par   3.5   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    3.5           6.6   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    6.6          10.4   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   11.4
\par   4.1   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    4.1           6.7   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    6.7          10.5   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   11.5
\par   4.2   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    4.2           8.1   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    7.1          10.6   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   11.6
\par   4.3   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    4.3           8.1   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    7.1          11.1   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   12.1
\par   4.4   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    4.4           8.2   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    7.2          11.2   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   12.2
\par   5.1   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    5.1           8.3   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    7.3          11.3   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   12.3
\par   5.2   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    5.2           8.4   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24    7.4          11.4   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   12.4
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\cs20\f2\fs24                           8.5   }{\cs20\f31\fs24 \u-4054
\'3f}{\cs20\f2\fs24    9.1          11.5   }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   12.5}{\fs22 
\par                                                         
\par 
\par }{\cs18\b\f29\fs32 3.9\tab 4th Edition Differences }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 3.9\tab 4th Edition Differences \tcl2}}}{\fs22                              
\par                                                         
\par In the fourth edition's PREFACE, pages vii-viii list the "CHANGES IN THE FOURTH EDITION".  The specifics of these changes are listed below.
\par 
\par Renamed Algorithms:\tab \tab \tab 4.1, 4.4, 7.1, 7.2, 9.2, 10.1, 11.2
\par New to 4th Edition:\tab \tab \tab 4.5, 6.5, 9.6
\par Modified in 4th Edition:\tab \tab 9.5B
\par Discontinued in 4th Edition:\tab \tab 6.4C, 9.6B
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\fs24 \page \sect }\sectd \sbknone\pgnrestart\linex0\footery1380\endnhere\sectdefaultcl {\footerl \pard\plain \s23\qr \li0\ri0\nowidctlpar
\tqc\tx4320\tqr\tx8640\pvpg\phpg\posx10944\posy15120\absw576\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cs24 PAGE  }}{\fldrslt {\cs24\lang1024\langfe1024\noproof 18}}}{\cs24 
\par }\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs19\b\f29\fs18 4-\chpgn   Step-By-Step Examples on Various Computers\tab Numerical Analysis Algorithms in C
\par }}{\footerr \pard\plain \s23\qr \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\pvpg\phpg\posx10944\posy15120\absw576\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cs24 PAGE  }}{\fldrslt {
\cs24\lang1024\langfe1024\noproof 17}}}{\cs24 
\par }\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs19\b\f29\fs18 Version 4.2\tab Step-By-Step Examples on Various Computers  4-\chpgn 
\par }}\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\fs22 
\par 
\par 
\par }\pard \ql \fi-631\li631\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin631\itap0 {\cs15\b\f29\fs40 4.\tab 
Step-By-Step Examples on Various Computers}{\pard\plain \ql \fi-631\li631\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin631\itap0 
\cs15\b\v\f29\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs15\b\f29\fs40 4.\tab Step-By-Step Examples on Various Computers}}}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par 
\par This chapter gives four step-by-step examples on several different computer systems.  The example will use Algorithm 4.1 - Composite Simpson's Rule for Integration ("041.c") and will compute the integral of f(x) = 2*cos(x) from 1 to 2 using 20 intervals.

\par 
\par Eight steps are typical every time an algorithm is used.  These steps are:
\par 
\par \tab Step #1 - Change to Correct Directory\tab \tab (operating system)
\par \tab Step #2 - Retrieve Algorithm\tab \tab \tab (editor)
\par \tab Step #3 - Edit Algorithm      \tab \tab \tab (editor)
\par \tab Step #4 - Save Modifications \tab \tab \tab (editor)
\par \tab Step #5 - Compile Algorithm\tab \tab \tab (compiler)
\par \tab Step #6 - Run Program\tab \tab \tab \tab (operating system)
\par \tab Step #7 - View Output\tab \tab \tab \tab (operating system)
\par \tab Step #8 - Print Output \tab \tab \tab \tab (operating system)
\par 
\par For two-thirds of the algorithms, Steps 2-4 are unnecessary and Step 5 needs to be done only once.  These files are marked with an asterisk ('*') in the table in Section 3.1.
\par 
\par The examples below will cover these eight steps on four different computer systems:  MS-DOS PCs, UNIX, Macintoshes, and VAXes.  Before following any of these examples, first check the need list below and configure your "naautil.c" file.
\par 
\par 
\par }{\cs18\b\f29\fs32 4.1\tab Need List }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 4.1\tab Need List \tcl2}}}{\fs22 
\par 
\par For this example the files "naautil.c" and "041.c" are needed.  "Naautil.c" and "041.c" are listed in Appendices A and B to be conveniently referred to during this example.  A simple text editor and a C 
compiler are also required.  The C compiler should be ANSI compatible if at all possible.  This will save you from possible incompatibility problems.
\par 
\par It is recommended that you try this example out on your computer system as you read this section.  Be sure to modify only COPIES of the original algorithms so the algorithms can be used over and over again without problems.
\par 
\par 
\par }{\cs18\b\f29\fs32 4.2\tab Customizing Naautil.c }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 4.2\tab Customizing Naautil.c \tcl2}}}{\fs22 
\par 
\par The first decisions to be made are what options and flags you would like to use or set inside the "naautil.c" file.  These flags are usually set only once.  An explanation of each flag is given below.
\par 
\par }{\b\fs22 ANSI}{\fs22 :
\par If your compiler supports the ANSI C standard, then set ANSI to TRUE.  Set ANSI to FALSE only if the program will not compile with it set to TRUE.  This flag mostly effects function prototype styles.
\par 
\par }{\b\fs22 ANSI_FUNCT}{\fs22 :
\par Set this flag to TRUE to use the ANSI style for declaring functions over the K&R style.  This flag must be set to TRUE if using THINK C 4.0 on a Macintosh.
\par 
\par }{\b\fs22 FILE_SAVE}{\fs22 :
\par If you would like to save the output to a file, then set FILE_SAVE to TRUE.  The output is still printed to the screen as you run the program.  Set it to FALSE if you do not want to save the output to a file.
\par 
\par }{\b\fs22 TITLE_PROMPT}{\fs22 :
\par If you would like to be prompted for an optional title at the start of each program, then set TITLE_PROMPT to TRUE.  This is useful when the output is to be handed
 in as homework, allowing the user's name or the problem number to be entered.  No title is printed to the output file if the [ENTER] key is hit by itself.  Set it to FALSE if you do not want to be bothered with entering a title every time you run an algo
rithm.
\par 
\par }{\b\fs22 EQ_EVAL}{\fs22 :
\par Several of the algorithms require a single function to be evaluated.  Set EQ_EVAL to TRUE if you wish to enter the function during run-time instead of at compile time.  A couple of simple modifications MUST be made to your algorithm BEFORE 
this option will be effective.  See Chapter 8 - "The Equation Evaluator Routines" for instructions on using this option.
\par 
\par }{\b\fs22 NAAUTIL_OBJ}{\fs22 :
\par This option is useful for users who wish to speed up the compilation process.  See Section 6.6 - "Using Naautil.c as Object Code" for more details.
\par 
\par These examples assume the following default settings:
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\faauto\rin0\lin0\itap0 {\cs20\f2\fs24 \tab }{\cs20\f2\fs24\ul FLAG\tab \tab SETTING}{\cs20\f2\fs24 
\par \tab ANSI\tab \tab TRUE
\par \tab ANSI_FUNCT\tab FALSE
\par \tab FILE_SAVE\tab TRUE
\par \tab TITLE_PROMPT\tab TRUE
\par \tab EQ_EVAL\tab \tab FALSE\tab (Is set to TRUE in "041ee.c")
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\cs20\f2\fs24 \tab NAAUTIL_OBJ\tab FALSE}{\fs22 
\par 
\par The ANSI, ANSI_FUNCT and OLD_UNIX_OS flags may need to be changed if your compiler varies from the ANSI standard.  See Section 6.5 - "Explanation of the Naautil.c File" for a more thorough explanation of the "naautil.c" flags.
\par 
\par 
\par }\pard \ql \fi-631\li631\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin631\itap0 {\cs18\b\f29\fs32 4.3\tab 
Example Using MS-DOS, Microsoft C and the P-Edit Editor }{\pard\plain \ql \fi-631\li631\ri0\widctlpar
\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin631\itap0 \cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 4.3
\tab Example Using MS-DOS, Microsoft C and the P-Edit Editor \tcl2}}}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par This example uses the following software:
\par 
\par \tab Operating System:\tab MS-DOS on an IBM PC
\par \tab Compiler:\tab \tab \tab Microsoft C 5.0
\par \tab Editor: \tab \tab \tab WordPerfect's P-Edit Editor
\par 
\par No special "naautil.c" flags need to be set.
\par 
\par This example assumes the files were installed onto the "C" drive in the "\\NAA42" sub-directory.  The DOS prompt will be represented by "}{\cs20\f2\fs24 C:\\NAA42>\~}{\fs22 ".
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #1 - Change to Correct Directory}{\fs22 
\par 
\par Assuming the "Numerical Analysis Algorithm in C" files are located in the "\\NAA42" sub-directory of the "C" drive, go there by typing:
\par 
\par \tab }{\cs20\f2\fs24 C:\\> CD \\NAA42}{\fs22 \tab \tab \tab \tab - changes directories
\par \tab }{\cs20\f2\fs24 C:\\NAA42> DIR /P}{\fs22 \tab \tab \tab - shows directory's contents
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #2 - Retrieve Algorithm}{\fs22 
\par 
\par Invoke your text editor and retrieve the algorithm file:
\par 
\par \tab }{\cs20\f2\fs24 C:\\NAA42> PE 041.C}{\fs22 
\par 
\par The file "041.c" is now loaded and is ready for editing.  A text editor is preferred over a word processor.  If you plan to use a word processor as your editor, be sure to retrieve and save all files as text-only files.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #3 - Edit Algorithm}{\fs22 
\par 
\par You must now modify the function f(x).  F(x) is listed twice - once as text and once as the actual function call.  All functions are defined at the top of each program.  To quickly find where modifications are necessary, search for the '}{\cs20\f2\fs24 $}
{\fs22 ' character.  This character is used exclusively for locating lines of code that need updating in all "Numerical Analysis Algorithms in C" files.
\par 
\par Search for the first '}{\cs20\f2\fs24 $}{\fs22 ':
\par 
\par \tab }{\cs20\f2\fs24 [F2] $ [F2]}{\fs22 \tab \tab \tab \tab - search
\par 
\par The first '}{\cs20\f2\fs24 $}{\fs22 ' should be found at line 22 of "041.c."
\par 
\par Change line 22 from:\tab }{\cs20\f2\fs24 char *eq_text_f = "f(x) = sin(x)";}{\fs22 
\par to:          }{\cs20\f2\fs24 \tab \tab char *eq_text_f = "f(x) = 2*cos(x)";}{\fs22 
\par 
\par This string of text will be printed as output exactly as it appears inside the quotations when the program is run.
\par 
\par Now search for the second '}{\cs20\f2\fs24 $}{\fs22 ':
\par 
\par \tab }{\cs20\f2\fs24 [F2] $ [F2]}{\fs22 \tab \tab \tab \tab - search
\par 
\par The second '}{\cs20\f2\fs24 $}{\fs22 ' should find the function itself on line 31 of "041.c."
\par Change line 31 from:\tab }{\cs20\f2\fs24 return (sin(x));}{\fs22 
\par to:          }{\cs20\f2\fs24 \tab \tab return (2.0 * cos(x));}{\fs22 
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #4 - Save Modifications}{\fs22 
\par 
\par Now save the file "041.c" with the above changes and exit the editor:
\par 
\par \tab }{\cs20\f2\fs24 [F7] Y [ENTER] Y Y}{\fs22 \tab \tab - save and exit
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #5 - Compile Algorithm}{\fs22 
\par 
\par Now compile and link "041.c" into the executable file "041.exe."  At the prompt type:
\par 
\par \tab }{\cs20\f2\fs24 C:\\NAA42> CL 041.C}{\fs22 
\par 
\par The batch file "cc.bat" can also be used in place of the "}{\cs20\f2\fs24 CL}{\fs22 " command.  See Sub-Section 7.3.1 on using "cc.bat."  If the program requires a larger stack than the default size, using "}{\cs20\f2\fs24 CL 041.C /link /ST:4096}{\fs22 
" will increase the stack from 2K bytes to 4K bytes in Microsoft C 5.0.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #6 - Run Program}{\fs22 
\par 
\par To run "041.exe", at the DOS prompt type:
\par 
\par \tab }{\cs20\f2\fs24 C:\\NAA42> 041}{\fs22 
\par 
\par The ".exe" extension can be left off.  Answer the prompts with the predetermined inputs.  The screen should look something like this:
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\faauto\rin0\lin0\itap0 {\cs20\f2\fs24     }{\cs20\f31\fs24 \u-4042\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044
\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044
\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044
\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4041\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24           "Numerical Analysis Algorithms in C" v4.2         }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter an optional title [ie \_ Set 2.1,  Problem 2 a) ].    }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  \_\_\_\_> }{\cs20\b\f2\fs24 User's Manual Example}{\cs20\f2\fs24                                 }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Composite Simpson's Rule \_ Algorithm 4.1                   }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  f(x) = 2*cos(x)                                            }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter endpoint a: }{\cs20\b\f2\fs24 1}{\cs20\f2\fs24                                         }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter endpoint b: }{\cs20\b\f2\fs24 2}{\cs20\f2\fs24                                         }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter number of intervals on [a,b], n: }{\cs20\b\f2\fs24 20}{\cs20\f2\fs24                   }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Interval number h = 0.05                                   }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24       }{\cs20\f30\fs24 \'21}{\cs20\f2\fs24 2                                                    }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  XI = }{\cs20\f31\fs24 \u-4054\'3f}{\cs20\f2\fs24   f(x) dx = 0.13565288875                            }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24       }{\cs20\f30\fs24 \'22}{\cs20\f2\fs24 1                                                    }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Required 21 functional evaluations.                        }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Output saved into file "041.out".                          }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\cs20\f2\fs24     }{\cs20\f31\fs24 \u-4039\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4040\'3f}{\fs22 
\par  
\par As indicated by the output, a file named "041.out" is created which contains the output results in a ready-to-print format.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #7 - View Output}{\fs22 
\par 
\par To view the contents of the output file "041.out", use either the DOS "type" command, the "Numerical Analysis Algorithms in C" utility "list.com", or your text editor.  See Section 7.2 for instructions on the usage of the "list.com" utility.
\par 
\par \tab }{\cs20\f2\fs24 C:\\NAA42> TYPE 041.OUT}{\fs22 \tab \tab \tab \tab - Using DOS's "type"
\par or
\par \tab }{\cs20\f2\fs24 C:\\NAA42> UTIL\\LIST 041.OUT}{\fs22 \tab \tab \tab - Using "list.com"
\par 
\par If the file's contents are accurate, then you are ready to print out a copy to be turned in as homework.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #8 - Print Output}{\fs22 
\par 
\par To print out the output file from DOS, type:
\par 
\par \tab }{\cs20\f2\fs24 C:\\NAA42> PRINT 041.OUT}{\fs22 
\par 
\par This step can also be done from within most text editors.  WARNING: Be careful not to print the executable file "041.exe".  It will waste reams of paper.
\par 
\par 
\par }{\cs18\b\f29\fs32 4.4\tab Example Using UNIX, cc and the vi Editor }{\pard\plain \ql \li0\ri0\widctlpar
\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 4.4\tab 
Example Using UNIX, cc and the vi Editor \tcl2}}}{\fs22 
\par 
\par This example uses the following software:
\par 
\par \tab Operating System:\tab UNIX
\par \tab Compiler:\tab \tab \tab cc
\par \tab Editor: \tab \tab \tab vi
\par 
\par You may need to set the OLD_UNIX_OS flag to TRUE if your C compiler requires the include file <varargs.h> instead of <stdarg.h> for variable length argument lists.  See your system's "/usr/include" sub-directory to determine 
which include file will be used.
\par 
\par The percent ('%') character will be used to represent the UNIX shell prompt.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #1 - Change to Correct Directory}{\fs22 
\par 
\par Assuming the "Numerical Analysis Algorithm in C" files are located in the "naa42" sub-directory, go there by typing:
\par 
\par \tab }{\cs20\f2\fs24 % cd naa42}{\fs22 \tab \tab \tab \tab \tab - changes directories
\par \tab }{\cs20\f2\fs24 % pwd}{\fs22 \tab \tab \tab \tab \tab \tab - shows current directory
\par \tab }{\cs20\f2\fs24 % ls -alF}{\fs22 \tab \tab \tab \tab \tab - shows directory's contents
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #2 - Retrieve Algorithm}{\fs22 
\par 
\par Invoke the vi editor and retrieve the algorithm file:
\par 
\par \tab }{\cs20\f2\fs24 % vi 041.c}{\fs22 
\par 
\par The file "041.c" is now loaded and is ready for editing.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #3 - Edit Algorithm}{\fs22 
\par 
\par You must now modify the function f(x).  F(x) is listed twice - once as text and once as the actual function call.  All functions are defined at the top of each program.  To quickly find where modifications are necessary, search for the '}{\cs20\f2\fs24 $}
{\fs22 ' character.  This character is used exclusively for locating lines of code that need updating in all "Numerical Analysis Algorithms in C" files.
\par 
\par Search for the first '}{\cs20\f2\fs24 $}{\fs22 ':
\par 
\par \tab }{\cs20\f2\fs24 /$}{\fs22 \tab \tab \tab \tab \tab - search
\par 
\par The first '}{\cs20\f2\fs24 $}{\fs22 ' should be found at line 22 of "041.c."
\par 
\par Change line 22 from:\tab }{\cs20\f2\fs24 char *eq_text_f = "f(x) = sin(x)";}{\fs22 
\par to:          }{\cs20\f2\fs24 \tab \tab char *eq_text_f = "f(x) = 2*cos(x)";}{\fs22 
\par 
\par This string of text will be printed as output exactly as it appears inside the quotations when the program is run.
\par 
\par Now search for the second '}{\cs20\f2\fs24 $}{\fs22 ':
\par 
\par \tab }{\cs20\f2\fs24 n}{\fs22 \tab \tab \tab \tab \tab - search (next occurrence)
\par 
\par The second '}{\cs20\f2\fs24 $}{\fs22 ' should find the function itself on line 31 of "041.c."
\par 
\par Change line 31 from:\tab }{\cs20\f2\fs24 return (sin(x));}{\fs22 
\par to:          }{\cs20\f2\fs24 \tab \tab return (2.0 * cos(x));}{\fs22 
\par 
\par Here are a few vi editing commands you should know for future reference:
\par 
\par \tab i\tab \tab Enters insert mode  (Exit this mode using [ESC])
\par \tab R\tab \tab Enters typeover mode  (Exit this mode using [ESC])
\par \tab r\tab \tab Replace character
\par \tab w\tab \tab Moves forward one word
\par \tab b\tab \tab Moves backward one word
\par \tab x\tab \tab Deletes a character
\par \tab dw\tab \tab Deletes a word
\par \tab dd\tab \tab Deletes a line
\par \tab cw\tab \tab Changes a word  (follow text by an [ESC] key)
\par \tab :#\tab \tab Go to line number #
\par \tab :w\tab \tab Saves (writes) editor contents to a file
\par \tab :q\tab \tab Quits (exits) the editor
\par \tab ZZ\tab \tab Exits the editor saving all changes  (Same as ":wq")
\par \tab [ESC]\tab Exits insert, typeover, and other editing modes
\par \tab /string\tab Searches forward for string
\par \tab ?string\tab Searches backwards for string
\par \tab n\tab \tab Continue search for string
\par \tab Arrow keys, ^g, ^h, ^j, ^k, or [SPACE] move the cursor
\par 
\par }{\cs17\f29\fs22 
\par }{\cs17\b\f29\fs22 Step #4 - Save Modifications}{\fs22 
\par 
\par Now save the file "041.c" with the above changes and exit the editor:
\par 
\par \tab }{\cs20\f2\fs24 :wq}{\fs22 \tab \tab \tab \tab \tab - write and quit
\par or
\par \tab }{\cs20\f2\fs24 ZZ}{\fs22 \tab \tab \tab \tab \tab - save and exit (faster to type than "}{\cs20\f2\fs24 :wq}{\fs22 ")
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #5 - Compile Algorithm}{\fs22 
\par 
\par Now compile and link "041.c" into the executable file "041".  At the shell prompt type:
\par 
\par \tab }{\cs20\f2\fs24 % cc -o 041 041.c -lm}{\fs22 
\par 
\par "Cc" invokes the C compiler, "-o 041" (NOT \_0) names the executable program, "041.c" is the source code file name, and "-lm" links with the mat
h library.  Without the "-o 041" the program would be given the default name of "a.out".  Without the "-lm" the program would give incorrect floating-point results.
\par 
\par The script file "ccc" can also be used in place of the "cc" command.  See Sub-Section 7.3.2 on using "ccc".  It will do the compiling, running, and will list the output for you.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #6 - Run Program}{\fs22 
\par 
\par To run "041", at the shell prompt type:
\par 
\par \tab }{\cs20\f2\fs24 % 041}{\fs22 
\par 
\par Answer the prompts with the predetermined inputs.  The screen should look something like this:
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\faauto\rin0\lin0\itap0 {\cs20\f2\fs24     }{\cs20\f31\fs24 \u-4042\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044
\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044
\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044
\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4041\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24           "Numerical Analysis Algorithms in C" v4.2         }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter an optional title [ie \_ Set 2.1,  Problem 2 a) ].    }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  \_\_\_\_> }{\cs20\b\f2\fs24 User's Manual Example}{\cs20\f2\fs24                                 }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Composite Simpson's Rule \_ Algorithm 4.1                   }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  f(x) = 2*cos(x)                                            }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter endpoint a: }{\cs20\b\f2\fs24 1}{\cs20\f2\fs24                                         }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter endpoint b: }{\cs20\b\f2\fs24 2}{\cs20\f2\fs24                                         }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter number of intervals on [a,b], n: }{\cs20\b\f2\fs24 20}{\cs20\f2\fs24                   }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Interval number h = 0.05                                   }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24       [2                                                    }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  XI = |  f(x) dx = 0.13565288875                            }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24       ]1                                                    }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Required 21 functional evaluations.                        }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Output saved into file "041.out".                          }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\cs20\f2\fs24     }{\cs20\f31\fs24 \u-4039\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4040\'3f}{\fs22 
\par 
\par As indicated by the output, a file named "041.out" is created which contains the output results in a ready-to-print format.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #7 - View Output}{\fs22 
\par 
\par To view the contents of the output file "041.out", use the UNIX "more" command.
\par 
\par \tab }{\cs20\f2\fs24 % more 041.out}{\fs22 
\par 
\par If the file's contents are accurate, then you are ready to print out a copy to be turned in as homework.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #8 - Print Output}{\fs22 
\par 
\par To print out the output file from the UNIX shell prompt, type:
\par 
\par \tab }{\cs20\f2\fs24 % lp 041.out}{\fs22 
\par 
\par "Lp" prints the file "041.out" to the line printer.  WARNING: Never try to print the executable file "041*" (denoted with an '*' when listed with "% ls -F").  It will waste reams of paper.
\par 
\par 
\par }{\cs18\b\f29\fs32 4.5\tab Example Using a Macintosh and THINK\~C }{\pard\plain \ql \li0\ri0\widctlpar
\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 4.5\tab 
Example Using a Macintosh and THINK\~C \tcl2}}}{\fs22 
\par This example uses the following software:
\par 
\par \tab Operating System:\tab Finder or MultiFinder on a Macintosh
\par \tab Compiler:\tab \tab \tab THINK\~C 4.0 by Symantec
\par \tab Editor: \tab \tab \tab THINK\~C editor
\par 
\par You will need to set the ANSI_FUNCT flag in "naautil.c" to TRUE to compile and use functions using variable length argument lists, such as "printf2(...)" 
and "eval_eq()".  It simply enforces the newer ANSI style function declarations over the older K&R style (see Section 9.1 for an example).
\par 
\par The following example was derived from Chapter 3 - "Tutorial: Hello World" in the THINK\~C User's Manual.  It replaces the "Hello Folder" with "041 Folder.}{\f32\fs22 \'42}{\fs22 ", "hello.c" with "041.c", and uses the ANSI library.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #1 - Create a Project}{\fs22 
\par 
\par The first thing you need to do is create a folder called "041\~Folder.}{\f32\fs22 \'42}{\fs22 " in the "Development" folder.  Do this before you start THINK\~C.  The "041\~Folder.}{\f32\fs22 \'42}{\fs22 
" folder should contain your source files ("041.c"), "naautil.c" and other supporting ".c" files such as "eqeval.c".  It is good programming practice, though not necessary, to name your project folders with a ".}{\f32\fs22 \'42}{\fs22 
" extension.  (To make a }{\f32\fs22 \'42}{\fs22 , type Option p.)
\par 
\par When you've created "041 Folder.}{\f32\fs22 \'42}{\fs22 ", open the THINK\~C Folder (the one that contains the THINK\~C application) and double click on the THINK\~C icon.
\par 
\par You'll see a dialogue box that asks you to open a project.  Since you are creating a new project, click on the }{\cs20\b\f2\fs24 New}{\fs22  button.  You'll see another dialogue box, one that lets you create projects.
\par 
\par Move back to the "041\~Folder.}{\f32\fs22 \'42}{\fs22 " folder you just created.  It is very important that you move to this folder.  Name the project "041\~project", and click on the }{\cs20\b\f2\fs24 Create}{\fs22  button.  THINK\~
C creates a new project document on disk and displays a project window.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #2 - Retrieve Algorithm}{\fs22 
\par 
\par To open the algorithm text file, choose the }{\cs20\b\f2\fs24 Open...}{\fs22  command in the }{\cs20\b\f2\fs24 File}{\fs22  menu.  Select the file "041.c" from the menu.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #3 - Edit Algorithm}{\fs22 
\par 
\par You must now modify the function f(x).  F(x) is listed twice - once as text and once as the actual function call.  All functions are defined at the top of each program.  To quickly find where modifications are necessary, search for the '}{\cs20\f2\fs24 $}
{\fs22 ' character.  This character is used exclusively for locating lines of code that need updating in all "Numerical Analysis Algorithms in C" files.
\par 
\par To search for the first '}{\cs20\f2\fs24 $}{\fs22 ' character, choose the }{\cs20\b\f2\fs24 Find...}{\fs22  command in the }{\cs20\b\f2\fs24 Search}{\fs22  menu.  Type a '}{\cs20\f2\fs24 $}{\fs22 ' character in the }{\cs20\b\f2\fs24 Search for:}{\fs22 
 field and click the }{\cs20\b\f2\fs24 Find}{\fs22  button.  It should be found at line 22 of "041.c."
\par 
\par Change line 22 from:\tab }{\cs20\f2\fs24 char *eq_text_f = "f(x) = sin(x)";}{\fs22 
\par to:          }{\cs20\f2\fs24 \tab \tab char *eq_text_f = "f(x) = 2*cos(x)";}{\fs22 
\par 
\par This string of text will be printed as output exactly as it appears inside the quotations when the program is run.
\par 
\par Now search for the second '}{\cs20\f2\fs24 $}{\fs22 ' by choosing the }{\cs20\b\f2\fs24 Find Again}{\fs22  command in the }{\cs20\b\f2\fs24 Search}{\fs22  menu.  The second '}{\cs20\f2\fs24 $}{\fs22 ' should find the function itself on line 31 of "041.c."

\par 
\par Change line 31 from:\tab }{\cs20\f2\fs24 return (sin(x));}{\fs22 
\par to:          }{\cs20\f2\fs24 \tab \tab return (2.0 * cos(x));}{\fs22 
\par 
\par You may want to read Chapter 8 - "The Editor" in your THINK\~C User's Manual for more information about the THINK\~C text editor.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #4 - Save Modifications}{\fs22 
\par 
\par When you have finished modifying the program, select }{\cs20\b\f2\fs24 Save As...}{\fs22  from the }{\cs20\b\f2\fs24 File}{\fs22  menu to save it.  You will get a dialogue box in which you should enter the name of the file "041.c", and click on the }{
\cs20\b\f2\fs24 Save}{\fs22  button.  THINK\~C will only compile files that end with ".c" or ".C".
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #5 - Compile Algorithm}{\fs22 
\par 
\par Now compile "041.c" into the executable named "041".  To do this, select }{\cs20\b\f2\fs24 Compile}{\fs22  from the }{\cs20\b\f2\fs24 Source}{\fs22  menu.  THINK\~C displays a dialogue box that shows how many lines have been compiled.  See your THINK\~
C User's Manual if you can not resolve any compilation errors.
\par 
\par Next, you need to add the "ANSI" library to your project.  This library contains all the standard C library routines such as printf().  To add the "ANSI" library, choose }{\cs20\b\f2\fs24 Add...}{\fs22  from the }{\cs20\b\f2\fs24 Source}{\fs22  menu.

\par 
\par When you get the standard file dialogue box, open the folder called "C Libraries."  This folder contains all the libraries for ANSI compatibility, including the "ANSI" library.  Select "}{\cs20\b\f2\fs24 ANSI}{\fs22 ", and click on the }{\cs20\b\f2\fs24 
Add}{\fs22  button.  WARNING - Do not select "ANSI-small" or "ANSI-A4" since they do not support floating-point operations.  If you have a math coprocessor (MC68881), }{\fs22\ul substitute}{\fs22 
 "ANSI" with "ANSI-881".  This will measurably speed up each algorithm's execution time.
\par 
\par THINK\~C adds the name "ANSI" to the project window and then puts up the standard file dialogue box again.  The second time around just click on the }{\cs20\b\f2\fs24 Cancel}{\fs22  box.  THINK\~
C will load the library automatically when you run the project.
\par 
\par IMPORTANT:  You may need to place "ANSI" into its own segment by draggi
ng "ANSI" below the dotted line and releasing it.  A line indicates that the code is separated into different segments.  This may be necessary due to an object code size limitation of 32K bytes per segment.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #6 - Run Program}{\fs22 
\par 
\par Everything is all set to run the project.  The source file is in the project window along with the libraries you will be using.  Now select }{\cs20\b\f2\fs24 Run}{\fs22  from the }{\cs20\b\f2\fs24 Project}{\fs22  menu.
\par THINK\~C notices that the library needs to be loaded, so it puts up a dialogue box asking you if you want to bring the project up to date.  Click on the }{\cs20\b\f2\fs24 Yes}{\fs22  button.  THINK\~
C goes to disk to load the code for the "ANSI" library.  The executable "041" is now being created.
\par 
\par Since all "Numerical Analysis Algorithms in C" programs call the printf() function, all output will go to a window called "console".  The console window emulates a generic terminal screen.
\par 
\par The program will now prompt you for inputs.  Answer the prompts with the predetermined inputs.  The console screen should look something like this:
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\faauto\rin0\lin0\itap0 {\cs20\f2\fs24     }{\cs20\f31\fs24 \u-4042\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044
\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044
\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044
\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4041\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f33\fs24 \'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f}{\cs20\f2\fs24  console }{\cs20\f33\fs24 \'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f
\'2f\'2f\'2f\'2f\'2f\'2f\'2f\'2f}{\cs20\f34\fs24 \u-4025\'3f}{\cs20\f33\fs24 \'2f}{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4038\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4036\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24           "Numerical Analysis Algorithms in C" v4.2         }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter an optional title [ie \_ Set 2.1,  Problem 2 a) ].    }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  \_\_\_\_> }{\cs20\b\f2\fs24 User's Manual Example}{\cs20\f2\fs24                                 }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Composite Simpson's Rule \_ Algorithm 4.1                   }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  f(x) = 2*cos(x)                                            }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter endpoint a: }{\cs20\b\f2\fs24 1}{\cs20\f2\fs24                                         }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter endpoint b: }{\cs20\b\f2\fs24 2}{\cs20\f2\fs24                                         }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter number of intervals on [a,b], n: }{\cs20\b\f2\fs24 20}{\cs20\f2\fs24                   }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Interval number h = 0.05                                   }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24       [2                                                    }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  XI = |  f(x) dx = 0.13565288875                            }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24       ]1                                                    }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Required 21 functional evaluations.                        }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Output saved into file "041.out".                          }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\cs20\f2\fs24     }{\cs20\f31\fs24 \u-4039\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4040\'3f}{\fs22 
\par 
\par To exit the program, press the Return key or choose }{\cs20\b\f2\fs24 Quit}{\fs22  from the }{\cs20\b\f2\fs24 File}{\fs22  menu.
\par 
\par As indicated by the output, a text file named "041.out" is created which contains the output results in a ready-to-print format.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #7 - View Output}{\fs22 
\par 
\par To view the contents of the output file, use the }{\cs20\b\f2\fs24 Open...}{\fs22  command in the }{\cs20\b\f2\fs24 File}{\fs22  menu and select "041.out."
\par 
\par If the file's contents are accurate, then you are ready to print out a copy to be turned in as homework.
\par 
\par }{\cs17\b\f29\fs22 Step #8 - Print Output}{\fs22 
\par 
\par To print out the output file, use the }{\cs20\b\f2\fs24 Print...}{\fs22  command in the }{\cs20\b\f2\fs24 File}{\fs22  menu.  Make sure the output file is in the frontmost edit w
indow.  You'll see the standard print dialogue for either the ImageWriter or LaserWriter.
\par 
\par To end this example session, select }{\cs20\b\f2\fs24 Close All}{\fs22  in the }{\cs20\b\f2\fs24 Windows}{\fs22  menu to close all open files.  If a file has not been saved, the editor will ask you if you want it saved.
\par 
\par 
\par }{\b\fs22 Using SANE}{\fs22 
\par 
\par As you use these algorithms, you may find it beneficial to use certain utility functions from the Standard Apple Numerics Environment (SANE).  The SANE library uses 80-bit values and is not intended for projects that have 
the MC68881 Code Generation option checked.
\par 
\par The eight functions below are common to both the SANE and ANSI libraries:
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\faauto\rin0\lin0\itap0 {\cs20\f2\fs24 \tab atan()\tab \tab exp()\tab \tab log()\tab \tab sqrt()
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\cs20\f2\fs24 \tab cos()\tab \tab fabs()\tab \tab sin()\tab \tab tan()}
{\fs22 
\par 
\par To use SANE versions, #include the file "SANE.h" before the file "math.h" in
side "naautil.c."  Similarly, to use the ANSI versions, #include the file "math.h" before the file "SANE.h" in "naautil.c."  For more information on SANE, read "Apple Numerics Manual, Second Edition" (Addison-Wesley).
\par 
\par 
\par }{\cs18\b\f29\fs32 4.6\tab Example Using VAX/VMS, CC and the EDIT/EDT Editor }{\pard\plain \ql \li0\ri0\widctlpar
\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 4.6\tab 
Example Using VAX/VMS, CC and the EDIT/EDT Editor \tcl2}}}{\fs22 
\par 
\par This example uses the following software:
\par 
\par \tab Operating System:\tab VAX/VMS (really DCL)
\par \tab Compiler:\tab \tab \tab VAX C v3.2 from DEC (CC)
\par \tab Editor: \tab \tab \tab EDIT/EDT or EVE
\par 
\par The dollar ('}{\cs20\f2\fs24 $}{\fs22 ') character will be used to represent the VMS command prompt.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #1 - Change to Correct Directory}{\fs22 
\par 
\par Assuming the "Numerical Analysis Algorithm in C" files are located in the "NAA42" sub-directory, go there by typing:
\par 
\par \tab }{\cs20\f2\fs24 $ SET DEFAULT [.NAA42]}{\fs22 \tab \tab - changes directories
\par \tab }{\cs20\f2\fs24 $ SHOW DEFAULT}{\fs22 \tab \tab \tab \tab - shows current directory
\par \tab }{\cs20\f2\fs24 $ DIR/SIZE/DATE}{\fs22 \tab \tab \tab \tab - shows directory's contents
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #2 - Retrieve Algorithm}{\fs22 
\par 
\par Invoke the EDIT/EDT editor and retrieve the algorithm file:
\par 
\par \tab }{\cs20\f2\fs24 $ EDIT/EDT 041.C}{\fs22 
\par 
\par The file "041.c" is now loaded and is ready for editing.  The first line of the file is printed to the screen.  An asterisk will follow which indicates that you are in EDT line editing mode.  It should look similar this:
\par 
\par \tab }{\cs20\f2\fs24 $ EDIT/EDT 041.C}{\fs22 
\par \tab }{\cs20\f2\fs24     1       /*****************************************************}{\fs22 
\par }{\cs20\f2\fs24 ****************}{\fs22 
\par \tab }{\cs20\f2\fs24 *}{\fs22 
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #3 - Edit Algorithm}{\fs22 
\par 
\par Now type "}{\cs20\f2\fs24 C}{\fs22 " or "}{\cs20\f2\fs24 SET MODE CHANGE}{\fs22 " followed by [}{\cs20\f2\fs24 ENTER}{\fs22 ] to leave line editing mode and enter full screen mode where you can use the EDT function keypad.
\par 
\par \tab }{\cs20\f2\fs24 * C [ENTER]}{\fs22 
\par 
\par You must now modify the function f(x).  F(x) is listed twice - once as text and once as the actual function call.  All functions are defined at the top of each program.  To quickly find where modifications are necessary, search for the '}{\cs20\f2\fs24 $}
{\fs22 ' character.  This character is used exclusively for locating lines of code that need updating in all "Numerical Analysis Algorithms in C" files.
\par 
\par Search for the first '}{\cs20\f2\fs24 $}{\fs22 ' by entering:
\par 
\par \tab }{\cs20\f2\fs24 [4] [PF1] [PF3] $}{\fs22 
\par 
\par The first '}{\cs20\f2\fs24 $}{\fs22 ' should be found on line 22 of "041.c."
\par 
\par Change line 22 from:\tab }{\cs20\f2\fs24 char *eq_text_f = "f(x) = sin(x)";}{\fs22 
\par to:          }{\cs20\f2\fs24 \tab \tab char *eq_text_f = "f(x) = 2*cos(x)";}{\fs22 
\par 
\par This string of text will be printed as output exactly as it appears inside the quotations when the program is run.
\par 
\par Now search for the second '}{\cs20\f2\fs24 $}{\fs22 ' by entering:
\par 
\par \tab }{\cs20\f2\fs24 [4] [PF1] [PF3] $}{\fs22 
\par 
\par The second '}{\cs20\f2\fs24 $}{\fs22 ' should find the function itself on line 31 of "041.c."
\par 
\par Change line 31 from:\tab }{\cs20\f2\fs24 return (sin(x));}{\fs22 
\par to:          }{\cs20\f2\fs24 \tab \tab return (2.0 * cos(x));}{\fs22 
\par 
\par Here are a few EDIT/EDT editing commands you should know:  (^ = [CONTROL])
\par 
\par \tab [PF2]\tab \tab Help
\par \tab [PF1][0]\tab \tab Opens blank line after current line
\par \tab [,]\tab \tab \tab Replace character
\par \tab [4][1]\tab \tab Moves forward one word
\par \tab [5][1]\tab \tab Moves backward one word
\par \tab [.]\tab \tab \tab Deletes a character
\par \tab [-]\tab \tab \tab Deletes a word  (Must be followed by the [ESC] key)
\par \tab [PF4]\tab \tab Deletes a line
\par \tab [-]\tab \tab \tab Changes a word  (Must be followed by the [ESC] key)
\par \tab [PF1][7]T#\tab Moves to line number #
\par \tab ^Z EXIT\tab \tab Quits the editor and saves any changes
\par \tab ^Z QUIT\tab \tab Quits the editor without saving changes
\par \tab [ESC]\tab \tab Terminate input mode
\par \tab ^Z\tab \tab \tab Exits full-screen mode and returns to line mode with *
\par \tab [4][PF1][PF3]string\tab \tab Searches forward for string
\par \tab [5][PF1][PF3]string\tab \tab Searches backwards for string
\par \tab [PF1][7] EXIT [ENTER]\tab Exits editor saving any changes
\par \tab Arrow keys, ^g, ^h, ^j, ^k, or [SPACE] move the cursor
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #4 - Save Modifications}{\fs22 
\par 
\par Now save the file "041.c" with the above changes and exit the editor:
\par 
\par \tab }{\cs20\f2\fs24 ^Z}{\fs22 \tab \tab \tab \tab - returns to line editing mode and the }{\cs20\f2\fs24 *}{\fs22  prompt
\par \tab }{\cs20\f2\fs24 * EXIT}{\fs22 \tab \tab \tab - save and exit
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #5 - Compile Algorithm}{\fs22 
\par 
\par The VAX C compiler needs to know which libraries to link to.  Two libraries will be used which will allow floating-point operations.  Define them once as follows:
\par 
\par \tab }{\cs20\f2\fs24 $ DEFINE LNK$LIBRARY    SYS$LIBRARY:VAXCRTLG}{\fs22 
\par \tab }{\cs20\f2\fs24 $ DEFINE LNK$LIBRARY_1  SYS$LIBRARY:VAXCRTL}{\fs22 
\par 
\par See "HELP CC Link_libraries" to make sure the defines above are correct for your VAX as well (/G_FLOAT without Curses).
\par 
\par Now compile and link "041.c" into the executable file "041.exe".  At the VAX prompt type:
\par 
\par \tab }{\cs20\f2\fs24 $ CC /G_FLOAT 041.C}{\fs22 
\par \tab }{\cs20\f2\fs24 $ LINK 041, LNK$LIBRARY/LIB, LNK$LIBRARY_1/LIB}{\fs22 
\par 
\par "}{\cs20\f2\fs24 Cc}{\fs22 " compiles "041.c" into "041.obj" object code.  "}{\cs20\f2\fs24 Link}{\fs22 " names the executable "041.exe" after linking it to the appropriate libraries.  For machine specific information on the "}{\cs20\f2\fs24 link}{\fs22 
" command, use the on-line help by typing "}{\cs20\f2\fs24 HELP CC LINK}{\fs22 " and "}{\cs20\f2\fs24 HELP LINK}{\fs22 ."
\par 
\par The command file "vaxcc.com" can also be used in place of the "}{\cs20\f2\fs24 cc}{\fs22 " and "}{\cs20\f2\fs24 link}{\fs22 
" commands.  See Sub-Section 7.3.3 on using "vaxcc.com".  It will do the compiling and linking in one simple step, assuming the link libraries are correct.  Using it is as easy as typing:
\par 
\par \tab }{\cs20\f2\fs24 $ @VAXCC.COM 041}{\fs22 \tab \tab - replaces Step #5 entirely
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #6 - Run Program}{\fs22 
\par 
\par To run "041.exe", at the VAX prompt type:
\par 
\par \tab }{\cs20\f2\fs24 $ RUN 041}{\fs22 
\par 
\par Answer the prompts with the predetermined inputs.  The screen should look something like this:
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\faauto\rin0\lin0\itap0 {\cs20\f2\fs24     }{\cs20\f31\fs24 \u-4042\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044
\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044
\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044
\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4041\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24           "Numerical Analysis Algorithms in C" v4.2         }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter an optional title [ie \_ Set 2.1,  Problem 2 a) ].    }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  \_\_\_\_> }{\cs20\b\f2\fs24 User's Manual Example}{\cs20\f2\fs24                                 }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Composite Simpson's Rule \_ Algorithm 4.1                   }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  f(x) = 2*cos(x)                                            }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter endpoint a: }{\cs20\b\f2\fs24 1}{\cs20\f2\fs24                                         }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter endpoint b: }{\cs20\b\f2\fs24 2}{\cs20\f2\fs24                                         }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Enter number of intervals on [a,b], n: }{\cs20\b\f2\fs24 20}{\cs20\f2\fs24                   }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Interval number h = 5.000000e-02                           }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24       [2                                                    }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  XI = |  f(x) dx = 0.13565288875                            }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24       ]1                                                    }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Required 21 functional evaluations.                        }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24                                                             }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par     }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24  Output saved into file "041.out".                          }{\cs20\f31\fs24 \u-4043\'3f}{\cs20\f2\fs24 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\cs20\f2\fs24     }{\cs20\f31\fs24 \u-4039\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f
\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4044\'3f\u-4040\'3f}{\fs22 
\par 
\par As indicated by the output, a file named "041.out" is created which contains the output results in a ready-to-print format.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #7 - View Output}{\fs22 
\par 
\par To view the contents of the output file "041.out", use the "TYPE" command.
\par 
\par \tab }{\cs20\f2\fs24 $ TYPE/PAGE 041.OUT}{\fs22 
\par 
\par If the file's contents are accurate, then you are ready to print out a copy to be turned in as homework.
\par 
\par 
\par }{\cs17\b\f29\fs22 Step #8 - Print Output}{\fs22 
\par To print out the output file from the VMS prompt, type:
\par 
\par \tab }{\cs20\f2\fs24 $ PRINT 041.OUT}{\fs22 
\par 
\par WARNING: Never try printing the executable file "041.exe."  It will waste reams of paper.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\fs24 \page \sect }\sectd \sbknone\pgnrestart\linex0\footery1380\endnhere\sectdefaultcl {\footerl \pard\plain \s23\qr \li0\ri0\nowidctlpar
\tqc\tx4320\tqr\tx8640\pvpg\phpg\posx10944\posy15120\absw576\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cs24 PAGE  }}{\fldrslt {\cs24\lang1024\langfe1024\noproof 6}}}{\cs24 
\par }\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs19\b\f29\fs18 5-\chpgn   For Those New to C\tab Numerical Analysis Algorithms in C
\par }}{\footerr \pard\plain \s23\qr \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\pvpg\phpg\posx10944\posy15120\absw576\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cs24 PAGE  }}{\fldrslt {
\cs24\lang1024\langfe1024\noproof 7}}}{\cs24 
\par }\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs19\b\f29\fs18 Version 4.2\tab For Those New to C  5-\chpgn 
\par }}\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 \f28\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\fs22 
\par 
\par 
\par }{\cs15\b\f29\fs40 5.\tab For Those New to C}{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs15\b\v\f29\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs15\b\f29\fs40 5.\tab For Those New to C}}}{\fs22 
\par 
\par 
\par This chapter will introduce you to the C programming language and some of its basic functions and features.  if you are new to C, it will be to your advantage to take a few minutes to read through 
this chapter before you move on.  If you are already familiar with C, you may want to glance through this chapter to remind you of the math library functions found in <math.h>.
\par 
\par The C language has been around since 1978.  Its popularity continues to grow e
specially among universities and industry.  C is usually learned as a second language after learning Pascal or FORTRAN.  This chapter is intended to give unexperienced programmers a push in the right direction.
\par 
\par The easiest way to learn C is by example.  This chapter also lists the preferred reference books, the mathematical operators and functions, and compares C with other popular programming languages -- along with examples.
\par 
\par If you do not own a C compiler and you have access to an IBM PC computer, and you do not want to pay much to get one (student mode), there are some low cost compilers on the market that you may wish to investigate.  One such compiler is "Power C".  This A
NSI compatible C compiler lists for only $19.95.  To order, call 1-800-333-0330, or write to: MIX Software, 1132 Commerce Dr., Richardson, TX 75081, (214) 783-6001.  Turbo C and Microsoft C seem to be among the most popular DOS C compilers on the market.

\par 
\par T
he definitive book on the C language is "The C Programming Language", Second Edition, by Brian W. Kernighan and Dennis M. Ritchie (Cost: $28.00).  If you are using an older C compiler (pre-1987), you may find the first edition more useful.  This 272 page 
book was written by the creators of C at AT&T Bell Laboratories.  All other books on C are derivatives of this book.
\par 
\par The syntax of older C compilers follows the first edition of "The C Programming Language."  This pre-standard is often referred to as K&R s
tyle, named after its authors, Kernighan and Ritchie.  The second edition was revised to conform to the ANSI standard.
\par 
\par 
\par }{\cs18\b\f29\fs32 5.1\tab Mathematical Operators }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 5.1\tab Mathematical Operators \tcl2}}}{\fs22 
\par 
\par The following operators are used to write mathematical equations in C.  These operators are built-in to the C language.  For more detailed descriptions, see your C compiler's documentation.
\par 
\par }{\fs22\ul Operator\tab \tab Description}{\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 *}{\fs22 \tab \tab \tab 
Multiplication.  Not to be confused with pointers.
\par \tab \tab \tab Example:  }{\cs20\f2\fs24 a = b * c;}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 /}{\fs22 \tab \tab \tab 
Division.  Chops to nearest integer if using integer types.  For instance,  11 / 4 = 2 since the remainder of 3 is discarded.  11.0 / 4.0 = 2.75.
\par }\pard \ql \fi-1152\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\fs22 \tab \tab Example:  }{\cs20\f2\fs24 a = b / c;}{
\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 %}{\fs22 \tab \tab \tab 
Remainder.  Also called the modulus operator.  Use fmod() and/or modf() for floats and doubles.  For instance, 11 % 4 = 3 since the quotient of 2 is discarded.
\par }\pard \ql \fi-1152\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\fs22 \tab \tab Example:  }{\cs20\f2\fs24 a = b % c;}{
\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 +}{\fs22 \tab \tab \tab Addition.
\par \tab \tab \tab Example:  }{\cs20\f2\fs24 a = b + c;}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 \_}{\fs22 \tab \tab \tab 
Subtraction and arithmetic negation.
\par \tab \tab \tab Example:  }{\cs20\f2\fs24 a = b \_ c;}{\fs22   and  }{\cs20\f2\fs24 a = \_b;}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 ++}{\fs22 \tab \tab \tab 
Increment.  For instance, }{\cs20\f2\fs24 i++;}{\fs22  is shorthand for }{\cs20\f2\fs24 i = i + 1;}{\fs22 
\par \tab \tab \tab Example:  }{\cs20\f2\fs24 i++;}{\fs22   (post\_increment)  and  }{\cs20\f2\fs24 ++i;}{\fs22   (pre\_increment)
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 \_\_}{\fs22 \tab \tab \tab 
Decrement.  For instance, }{\cs20\f2\fs24 i\_\_;}{\fs22  is shorthand for }{\cs20\f2\fs24 i = i \_ 1;}{\fs22 
\par \tab \tab \tab Example:  }{\cs20\f2\fs24 i\_\_;}{\fs22   (post\_decrement)  and  }{\cs20\f2\fs24 \_\_i;}{\fs22   (pre\_decrement)
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 *=}{\fs22 \tab \tab \tab 
Multiplication assignment.  For instance, }{\cs20\f2\fs24 x *= 3.14 + y;}{\fs22  is shorthand for }{\cs20\f2\fs24 x = x * (3.14 + y);}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 /=}{\fs22 \tab \tab \tab 
Division assignment.  For instance, }{\cs20\f2\fs24 x /= 3.14 + y;}{\fs22  is shorthand for }{\cs20\f2\fs24 x = x / (3.14 + y);}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 %=}{\fs22 \tab \tab \tab 
Remainder assignment.  Integers only.  For instance, }{\cs20\f2\fs24 a %= 314 + b;}{\fs22  is shorthand for }{\cs20\f2\fs24 a = a % (314 + b);}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 +=}{\fs22 \tab \tab \tab 
Addition assignment.  For instance, }{\cs20\f2\fs24 x += 3.14 + y;}{\fs22  is shorthand for }{\cs20\f2\fs24 x = x + (3.14 + y);}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 \_=}{\fs22 \tab \tab \tab 
Subtraction assignment.  For instance, }{\cs20\f2\fs24 x \_= 3.14 + y;}{\fs22  is shorthand for }{\cs20\f2\fs24 x = x \_ (3.14 + y);}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par 
\par }{\cs18\b\f29\fs32 5.2\tab Mathematical Functions }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 5.2\tab Mathematical Functions \tcl2}}}{\fs22 
\par 
\par The following functions are useful when writing mathematical equations in C.  These functions are not part of the C language proper, but are part of
 the standard library, an environment that supports standard C.  For more detailed descriptions of these libraries, see your C compiler's documentation.  Another good place to browse is inside the include files <math.h> and <stdlib.h>.  These two include 
files provide the function declarations for most of the below functions.
\par 
\par Listed below are the variable types used in the examples.
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\faauto\rin0\lin0\itap0 {\cs20\f2\fs24\ul \tab Type\tab \tab Variables}{\cs20\f2\fs24 
\par \tab float\tab \tab w;
\par \tab double\tab \tab x, y, exp;
\par \tab int\tab \tab *expptr, *intptr, n;
\par \tab long int\tab p, q;
\par \tab char\tab \tab *string;
\par \tab div_t\tab \tab num, denom;
\par \tab struct complex\tab z;
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\cs20\f2\fs24 struct complex \{ double r,i; \}
 z;  /* Real and imaginary components */}{\fs22 
\par 
\par }{\cs20\f2\fs24 #include <math.h>}{\fs22 \tab \tab - must be included to use these functions!
\par }{\cs20\f2\fs24 #include <stdlib.h>}{\fs22 \tab \tab - must be included to use these functions!
\par 
\par 
\par }{\fs22\ul Function\tab \tab Description}{\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 abs(n)}{\fs22 \tab \tab 
Returns the absolute value of its integer argument.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 acos(x)}{\fs22 \tab \tab 
Returns the arccosine of x in the range 0 to }{\f32\fs22 \'42}{\fs22 .  The value of x must be between \_1 and 1.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 asin(x)}{\fs22 \tab \tab 
Returns the arcsine of x in the range \_}{\f32\fs22 \'42}{\fs22 /2 to }{\f32\fs22 \'42}{\fs22 /2.  The value of x must be between \_1 and 1.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 atan(x)}{\fs22 \tab \tab 
Returns the arctangent of x in the range \_}{\f32\fs22 \'42}{\fs22 /2 to }{\f32\fs22 \'42}{\fs22 /2.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 atan2(y,x)}{\fs22 \tab 
Returns the arctangent of y/x in the range \_}{\f32\fs22 \'42}{\fs22  to }{\f32\fs22 \'42}{\fs22 .  Unlike }{\cs20\f2\fs24 atan()}{\fs22 , }{\cs20\f2\fs24 atan2()}{\fs22  uses the signs of both x and y to determine the true quadrant of the return value.

\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-2304\li2304\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin2304\itap0 {\cs20\f2\fs24 atof(string)}{\fs22 \tab 
Converts a character string into a double\_precision floating\_point value.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-2304\li2304\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin2304\itap0 {\cs20\f2\fs24 atoi(string)}{\fs22 \tab 
Converts a character string into an integer value.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 cabs(z)}{\fs22 \tab \tab 
Returns the absolute value of a complex number, which must be a structure of type complex (shown above).   Equivalent to }{\cs20\f2\fs24 sqrt(z.x*z.x + z.y*z.y)}{\fs22 .  NOT IN ANSI STANDARD.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 ceil(x)}{\fs22 \tab \tab Returns a double\_
precision floating\_point value representing the smallest integer not less than x.  Also called the postage stamp function.
\par \tab \tab \tab Example: }{\cs20\f2\fs24 ceil(1.05) = 2.0}{\fs22 ,  }{\cs20\f2\fs24 ceil(\_1.05) = \_1.0}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 cos(x)}{\fs22 \tab \tab 
Returns the cosine of x, where x is in radians.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 cosh(x)}{\fs22 \tab \tab 
Returns the hyperbolic cosine of x.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-2304\li2304\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin2304\itap0 {\cs20\f2\fs24 div(num,denom)}{\fs22 \tab 
Computes the quotient and remainder of num/denom.  The results are stored in the int members quot and rem of a structure of type div_t.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 exp(x)}{\fs22 \tab \tab 
Returns the exponential function of its floating\_point argument x.  Also called Euler's or the natural number, e }{\f33\fs22 \'2e}{\fs22  2.71828182845.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 fabs(x)}{\fs22 \tab \tab 
Returns the absolute value of its floating\_point argument x.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 floor(x)}{\fs22 \tab Returns a double\_
precision floating\_point value representing the largest integer not greater than x.  Also called the greatest integer function, [\~].
\par \tab \tab \tab Example: }{\cs20\f2\fs24 floor(1.05) = 1.0}{\fs22 ,  }{\cs20\f2\fs24 floor(\_1.05) = \_2.0}{\fs22 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 fmod(x,y)}{\fs22 \tab Returns the floating
\_point remainder f of x/y such that x = i*y + f, where i is an integer.  f has the same sign as x, and the absolute value of f is less than the absolute value of y.  If y is zero, the result is implementation defined.
\par }\pard \ql \fi-2880\li2880\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin2880\itap0 {\cs20\f2\fs24 frexp(x,expptr)}{\fs22 \tab 
Breaks down the floating\_point value, x, into a mantissa, p, and an exponent, q, such that the absolute value of p is }{\f33\fs22 \'24}{\fs22 
 0.5 and < 1.0, and x = p*2^q.  The integer exponent is stored in the location pointed to by expptr.  If x is zero, both parts of the result are zero.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 hypot(x,y)}{\fs22 \tab 
Returns the length of the hypotenuse of a right triangle, given the length of the two sides x and y.  Equivalent to:  }{\cs20\f2\fs24 sqrt(x*x + y*y)}{\fs22 .  NOT IN ANSI STANDARD.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-2304\li2304\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin2304\itap0 {\cs20\f2\fs24 ldexp(x,exp)}{\fs22 \tab Returns x * 2^exp.

\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 log(x)}{\fs22 \tab \tab 
Returns the natural logarithm of x, x > 0.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 log10(x)}{\fs22 \tab Returns the base\_
10 logarithm of x, x > 0.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-2304\li2304\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin2304\itap0 {\cs20\f2\fs24 modf(x,intptr)}{\fs22 \tab 
Breaks down the floating-point value x into fractional and integer parts.  The signed fractional portion of x is returned.  The integer portion is stored as a floating\_point value at intptr.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 pow(x,y)}{\fs22 \tab 
Returns x raised to the yth power (x^y).  A domain error occurs if x = 0 and y }{\f33\fs22 \'23}{\fs22  0, or if x }{\f33\fs22 \'23}{\fs22  0 and y is not an integer.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 rand()}{\fs22 \tab \tab Returns a pseudo\_
random integer in the range 0 to RAND_MAX, which is at least 32,767.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 sin(x)}{\fs22 \tab \tab 
Returns the sine of x, where x is in radians.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 sinh(x)}{\fs22 \tab \tab 
Returns the hyperbolic sine of x.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 sqrt(x)}{\fs22 \tab \tab 
Returns the square root of x, x }{\f33\fs22 \'24}{\fs22  0.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 srand(seed)}{\fs22 \tab 
Uses seed as the seed for a new sequence of pseudo\_random numbers.  The initial seed is 1.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 tan(x)}{\fs22 \tab \tab Return
s the tangent of x, where x is in radians.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 tanh(x)}{\fs22 \tab \tab 
Returns the hyperbolic tangent of x.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par 
\par AVAILABLE AS EXTENSIONS ON SOME C COMPILERS (ie \_ MIPS for an R3000A/R3010):
\par 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 fsin(w)}{\fs22 \tab \tab Sine for floats.  
}{\cs20\f2\fs24 Sin(x)}{\fs22  is for doubles.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 fcos(w)}{\fs22 \tab \tab 
Cosine for floats.  }{\cs20\f2\fs24 Cos(x)}{\fs22  is for doubles.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 ftan(w)}{\fs22 \tab \tab 
Tangent for floats.  }{\cs20\f2\fs24 Tan(x)}{\fs22  is for doubles.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 fasin(w)}{\fs22 \tab Arcsine for floats.  }
{\cs20\f2\fs24 Asin(x)}{\fs22  is for doubles.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 facos(w)}{\fs22 \tab 
Arccosine for floats.  }{\cs20\f2\fs24 Acos(x)}{\fs22  is for doubles.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 fatan(w)}{\fs22 \tab 
Arctangent for floats.  }{\cs20\f2\fs24 Atan(x)}{\fs22  is for doubles.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 fsinh(w)}{\fs22 \tab Hyper
bolic sine for floats.  }{\cs20\f2\fs24 Sinh(x)}{\fs22  is for doubles.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 fcosh(w)}{\fs22 \tab 
Hyperbolic cosine for floats.  }{\cs20\f2\fs24 Cosh(x)}{\fs22  is for doubles.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par }\pard \ql \fi-1728\li1728\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin1728\itap0 {\cs20\f2\fs24 ftanh(w)}{\fs22 \tab 
Hyperbolic tangent for floats.  }{\cs20\f2\fs24 Tanh(x)}{\fs22  is for doubles.
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\fs22 
\par 
\par }{\cs18\b\f29\fs32 5.3\tab General Language Hints }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 5.3\tab General Language Hints \tcl2}}}{\fs22 
\par 
\par 
\par }{\b\fs22 Ternary Statements:}{\fs22 
\par 
\par C has a couple of constructs that may be foreign to users used to FORTRAN\~77 or other high level languages.  One of these is the ternary statement:
\par 
\par \tab \tab }{\cs20\f2\fs24 a = b ? c : d;}{\fs22 
\par 
\par which is equivalent to:
\par 
\par \tab \tab }{\cs20\f2\fs24 if (b == TRUE)}{\fs22 
\par \tab \tab \tab }{\cs20\f2\fs24 a = c;}{\fs22 
\par \tab \tab }{\cs20\f2\fs24 else}{\fs22 
\par \tab \tab \tab }{\cs20\f2\fs24 a = d;}{\fs22 
\par 
\par A couple of examples might include:
\par 
\par \tab \tab }{\cs20\f2\fs24 max = (a > b) ? (a) : (b);}{\fs22 
\par or
\par \tab \tab }{\cs20\f2\fs24 printf("%d iteration%s", iter, (iter > 1) ? "s" : "");}{\fs22 
\par \tab \tab }{\cs20\f2\fs24 /* Prints: "1 iteration" and "2 iterations" */}{\fs22 
\par 
\par 
\par }{\b\fs22 Defining TRUE and FALSE}{\fs22 :
\par 
\par Remember, in C "0" is FALSE while anything other than "0" is defined as TRUE.  For example:
\par 
\par \tab \tab -2\tab = TRUE
\par \tab \tab -1\tab = TRUE
\par \tab \tab  0\tab = FALSE
\par \tab \tab  1\tab = TRUE\tab (default)
\par \tab \tab  2\tab = TRUE
\par 
\par Usually, TRUE and FALSE are defined as "}{\cs20\f2\fs24 #define FALSE 0}{\fs22 " and "}{\cs20\f2\fs24 #define TRUE !FALSE}{\fs22 " or "}{\cs20\f2\fs24 #define TRUE 1}{\fs22 ".
\par 
\par 
\par }{\b\fs22 Common Equivalents:}{\fs22 
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx1152\tx2304\tx3456\tx4608\tx5760\tx6912\tx8064\tx9216\faauto\rin0\lin0\itap0 {\cs20\f2\fs24\ul \tab SHORT HAND\tab LONG HAND}{\cs20\f2\fs24 
\par \tab if (expr) ...\tab if (expr == TRUE) ...
\par \tab if (!expr) ...\tab if (expr == FALSE) ...
\par \tab i++\tab \tab i = i + 1
\par \tab i--\tab \tab i = i - 1
\par \tab i += 2\tab \tab i = i + 2
\par }\pard \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 {\cs20\f2\fs24 \tab i -= 2\tab \tab i = i - 2}{\fs22 
\par 
\par 
\par }{\cs18\b\f29\fs32 5.4\tab Language Transition Kit }{\pard\plain \ql \li0\ri0\widctlpar\tx0\tx576\tx1152\tx1728\tx2304\tx2880\tx3456\tx4032\tx4608\tx5184\tx5760\tx6336\tx6912\tx7488\tx8064\tx8640\tx9216\tx9792\tx10368\faauto\rin0\lin0\itap0 
\cs18\b\v\f29\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tc {\cs18\b\f29\fs32 5.4\tab Language Transition Kit \tcl2}}}{\fs22 
\par 
\par Many numerical analysis students may already be familiar with another programming language other than C.  This section is intended to help those who have learned other languages other than C to transfer their knowledge easil
y into C.  To accomplish this goal, two large appendices have been compiled.
\par 
\par Appendix C contains a set of charts comparing C statements with those of other popular languages.  The tables provided should help in understanding and modifying the equations an
d code as needed to perform numerical analysis.  These tables show a simple comparison of programming statements most likely to be used in numerical analysis programs.
\par 
\par Appendix D contains a set of working examples in six different languages.  These source
 code examples show how programs look in each of these languages.  These programs do numerical integration using Algorithm 4.1 - Composite Simpson's Rule.  Each program was compiled and run to ensure they were logically and syntactically correct.  The inp
ut, output, and include files are also listed for completeness.  These files are included in the LANGS sub-directory on the distribution diskettes.
\par 
\par The list below shows the language, compiler and standard used to create the comparison charts and example programs.
\par 
\par }{\fs22\ul \tab LANGUAGE\tab COMPILER\tab \tab \tab \tab STANDARD}{\fs22 
\par 1.\tab Ada\tab \tab \tab Meridian Ada 4.1\tab \tab \tab ANSI/MIL\_STD\_1815A
\par 2.\tab BASIC\tab \tab Microsoft GW\_BASIC 3.20
\par 3.\tab C\tab \tab \tab Microsoft C 5.0\tab \tab \tab \tab ANSI C
\par 4.\tab C++   \tab \tab Borland Turbo C++ 2.0\tab \tab AT&T C++ v2.0
\par 5.\tab FORTRAN\~77\tab Microsoft FORTRAN\~77 3.3 \tab ANSI FORTRAN\~77
\par 6.\tab Pascal\tab \tab Borland Turbo PASCAL 3.01A
\par 
\par This language transition kit, comprised of Appendices C and D, account for one-third of this User's Manual.  They are not really a necessary part of the "Numerical Analysis Algorithms in C' package, but they tremen
dously aid those who are new or "rusty" on their computer programming skills.}{
\par }}